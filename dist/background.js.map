{
  "version": 3,
  "sources": ["../src/background.js"],
  "sourcesContent": ["// Path: background.js\n\n//storage method: {channels:[channel_names], enabled:bool}\nfunction debugPrint(text) {\n\tconsole.log(\"-\".repeat(20));\n\tconsole.log(text);\n\tconsole.log(\"-\".repeat(20));\n}\n\nclass Browser {\n\tstatic get browser_instance() {\n\t\t//check if browser is chrome or firefox\t\n\t\tif (typeof browser !== 'undefined') {\n\t\t\treturn browser;\n\t\t}\n\t\tif (typeof chrome !== 'undefined') {\n\t\t\treturn chrome;\n\t\t}\n\t\tthrow new Error('No browser instance found');\n\t}\n}\n\nclass Storage {\n\tstatic storage = Browser.browser_instance.storage.sync;\n\n\tstatic async createIfNotExists(key, init_value) {\n\t\treturn new Promise((resolve, _reject) => {\n\t\t\tthis.storage.get(key).then((result) => {\n\t\t\t\tif (result[key] === undefined) {\n\n\t\t\t\t\tthis.storage.set({ [key]: init_value }, () => { });\n\t\t\t\t\tresolve(true);\n\t\t\t\t} else {\n\t\t\t\t\tresolve(false);\n\t\t\t\t}\n\t\t\t});\n\t\t});\n\t}\n\n\tstatic async get(key) {\n\t\treturn new Promise((resolve, _reject) => {\n\t\t\tthis.storage.get(key).then((result) => {\n\t\t\t\tresolve(result);\n\t\t\t});\n\t\t});\n\t}\n\n\tstatic async set(key, value) {\n\t\treturn new Promise((resolve, _reject) => {\n\t\t\tthis.storage.set({ [key]: value }, () => {\n\t\t\t\tresolve();\n\t\t\t});\n\t\t});\n\t}\n\n\tstatic async delete(key) {\n\t\treturn new Promise((resolve, _reject) => {\n\t\t\tthis.storage.remove(key, () => {\n\t\t\t\tresolve();\n\t\t\t});\n\t\t});\n\t}\n}\n\n//clean routine\nfunction cleanRoutine() {\n\tStorage.get(\"channels\").then((result) => {\n\t\tif (result.channels === undefined) return;\n\t\tlet channels = result.channels;\n\t\t//filter out null values\n\t\tchannels = channels.filter((c) => c !== null);\n\t\tconsole.log(channels);\n\t\tStorage.set(\"channels\", channels);\n\t});\n}\n\n// browser runtime listener\nStorage.createIfNotExists(\"channels\", []);\nStorage.createIfNotExists(\"enabled\", true);\n\nasync function getChannels() {\n\tconst result = await Storage.get(\"channels\");\n\treturn result;\n}\n\nasync function getTab(tabIndex) {\n\tlet queryOptions = { active: true, currentWindow: true, index: tabIndex };\n\tlet tabs = await Browser.browser_instance.tabs.query(queryOptions);\n\tlet MAX_ATTEMPTS = 100;\n\twhile (tabs.length === 0 && MAX_ATTEMPTS > 0) {\n\t\ttabs = await Browser.browser_instance.tabs.query(queryOptions);\n\t\tawait new Promise((resolve) => setTimeout(resolve, 50));\n\t\tMAX_ATTEMPTS--;\n\t}\n\tif (MAX_ATTEMPTS === 0) {\n\t\tconsole.log(\"Error: Could not get tab...\")\n\t\treturn null;\n\t}\n\treturn tabs[0].url;\n}\n\nfunction determinePageType(url) {\n\tconst urlObject = new URL(url);\n\n\tif (urlObject.hostname === 'www.youtube.com') {\n\t\tconst path = urlObject.pathname.toLowerCase();\n\n\t\tif (path === '/' || path === '/results' || path === '/feed/trending') {\n\t\t\treturn 'home';\n\t\t} else if (path.startsWith('/watch')) {\n\t\t\treturn 'video';\n\t\t} else if (path.startsWith('/@')) {\n\t\t\treturn 'channel';\n\t\t}\n\t}\n\n\t// If the URL doesn't match the expected patterns\n\treturn 'home';\n}\n\n\n//send message to content script to refresh -- called when site is changed or updated\nBrowser.browser_instance.tabs.onUpdated.addListener((_tabId, changeInfo, tab) => {\n\tif (changeInfo.status === \"complete\") {\n\t\tBrowser.browser_instance.tabs.sendMessage(tab.id, { type: \"update\" });\n\t}\n});\n\n\n\n//setchannels\nBrowser.browser_instance.runtime.onMessage.addListener((request, _sender, _sendResponse) => {\n\tif (request.type === \"set-channels\") {\n\t\tStorage.set(\"channels\", request.channels);\n\t\t_sendResponse({ type: \"reload-channels\", channels: request.channels });\n\t\t//send update to all tabs\n\t\tBrowser.browser_instance.tabs.query({}, (tabs) => {\n\t\t\ttabs.forEach((tab) => {\n\t\t\t\tBrowser.browser_instance.tabs.sendMessage(tab.id, { type: \"update-channels\", channels: request.channels });\n\t\t\t});\n\t\t});\n\t}\n});\n\n//recieve message from content script\nBrowser.browser_instance.runtime.onMessage.addListener((request, _sender, _sendResponse) => {\n\tif (request.type === \"add-channel\") {\n\t\tStorage.get(\"channels\").then((result) => {\n\t\t\tlet channels = result.channels;\n\t\t\tif (channels.includes(request.channel)) {\n\t\t\t\treturn;\n\t\t\t} else {\n\t\t\t\tif ((request.channel?.length ?? 0) <= 0) return; //ignore\n\t\t\t\tdebugPrint(\"Adding Channel: \" + request.channel);\n\t\t\t\tchannels.push(request.channel);\n\t\t\t\tStorage.set(\"channels\", channels);\n\t\t\t}\n\t\t});\n\t}\n});\n\n//recieve message from content script\nBrowser.browser_instance.runtime.onMessage.addListener((request, _sender, _sendResponse) => {\n\tif (request.type === \"remove-channel\") {\n\t\tStorage.get(\"channels\").then((result) => {\n\t\t\tlet channels = result.channels;\n\t\t\tif (channels.includes(request.channel)) {\n\t\t\t\tdebugPrint(\"Remove Channel: \" + request.channel);\n\t\t\t\tchannels = channels.filter((c) => c !== request.channel);\n\t\t\t\tStorage.set(\"channels\", channels);\n\t\t\t} else {\n\t\t\t}\n\t\t});\n\t}\n});\n\n//recieve message from channels \nBrowser.browser_instance.runtime.onMessage.addListener((request, _sender, _sendResponse) => {\n\tif (request.type === \"get-channels\") {\n\t\tgetChannels().then((result) => {\n\t\t\tconsole.log(\"Sending channels: \", result.channels);\n\t\t\t_sendResponse({ type: \"query-channels\", channels: result.channels });\n\t\t});\n\t\treturn true;\n\t}\n});\n\n//return current page (home or video)\nBrowser.browser_instance.runtime.onMessage.addListener((request, _sender, _sendResponse) => {\n\tif (request.type === \"get-page\") {\n\t\t//get tab id\n\t\tconst tabIndex = _sender.tab.index;\n\t\tgetTab(tabIndex).then((result) => {\n\t\t\tconst page = determinePageType(result);\n\t\t\t_sendResponse({ type: \"query-page\", page: page });\n\t\t});\n\t\treturn true;\n\t}\n});\n\nBrowser.browser_instance.runtime.onMessage.addListener((request, _sender, _sendResponse) => {\n\tif (request.type === \"get-enabled\") {\n\t\tStorage.get(\"enabled\").then((result) => {\n\t\t\t_sendResponse({ type: \"query-enabled\", enabled: result.enabled });\n\t\t\tconsole.log(\"Sending enabled: \", result.enabled);\n\t\t});\n\t\treturn true;\n\t}\n});\n\nBrowser.browser_instance.runtime.onMessage.addListener((request, _sender, _sendResponse) => {\n\tif (request.type === \"set-enabled\") {\n\t\tStorage.set(\"enabled\", request.enabled ?? true);\n\t\tconsole.log(\"Setting enabled to: \", request.enabled);\n\t\treturn true;\n\t}\n});\n\n\ncleanRoutine();\n"],
  "mappings": "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",
  "names": []
}
