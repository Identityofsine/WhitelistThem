{
  "version": 3,
  "sources": ["../src/constants/settings.ts", "../src/object/abstract/identifiable.ts", "../src/framework/element/component.ts", "../src/framework/components/ToggleComponent.ts", "../src/object/video.ts", "../src/factory/videofactory.ts", "../src/interfaces/browser.ts", "../src/handler/messagehandler.ts", "../src/error/timeout.ts", "../src/util/sleep.ts", "../src/handler/pagehandler.ts", "../src/framework/state/state.ts", "../src/object/channel.ts", "../src/framework/components/InputComponent.ts", "../src/framework/components/SyncPage.ts", "../src/index.ts"],
  "sourcesContent": ["export const SleepSettings = {\n\twaiting: 250,\n\tengine: 50,\n\tmax_attempts: 50,\n};\n\nexport const YoutubeSettings = {\n\thome: {\n\t\tcontainer: \"ytd-rich-grid-renderer\",\n\t\tyt_video: \"ytd-rich-item-renderer\",\n\t\tyt_video_title: {\n\t\t\ttag: \"a\",\n\t\t\tid: \"video-title-link\",\n\t\t},\n\t\tshorts: {\n\t\t\ttag: \"ytd-rich-section-renderer\",\n\t\t\tclass: \"style-scope ytd-rich-grid-renderer\",\n\t\t},\n\t},\n\tvideo: {\n\t\tcontainer: \"ytd-watch-next-secondary-results-renderer\",\n\t\tyt_video: \"ytd-compact-video-renderer\",\n\t\tyt_circle: \"ytd-continuation-item-renderer\",\n\t\tyt_video_link: {\n\t\t\ttag: \"a\",\n\t\t\tclass: \"yt-simple-endpoint style-scope ytd-compact-video-renderer\",\n\t\t},\n\t\tyt_video_title: {\n\t\t\ttag: \"span\",\n\t\t\tid: \"video-title\",\n\t\t},\n\t\tchannel: {\n\t\t\tcontainer: \"ytd-channel-name\",\n\t\t\ttag: \"yt-formatted-string\",\n\t\t\tid: \"channel-name\",\n\t\t\tlink: {\n\t\t\t\tcontainer: \"dismissible\",\n\t\t\t\ttag: \"a\",\n\t\t\t\tclass: \"yt-simple-endpoint style-scope ytd-compact-video-renderer\",\n\t\t\t},\n\t\t},\n\t},\n\tchannel: {\n\t\tchannel: {\n\t\t\tcontainer: \"ytd-channel-name\",\n\t\t\ttag: \"yt-formatted-string\",\n\t\t},\n\t\tinject: {\n\t\t\tcontainer: {\n\t\t\t\ttag: \"div\",\n\t\t\t\tid: \"inner-header-container\",\n\t\t\t},\n\t\t\tinjection_spot: {\n\t\t\t\ttag: \"div\",\n\t\t\t\tid: \"buttons\",\n\t\t\t\tinject_id: \"wt-add\",\n\t\t\t},\n\t\t},\n\t},\n\tgeneric: {\n\t\theader: {\n\t\t\tcontainer: {\n\t\t\t\ttag: \"ytd-masthead\",\n\t\t\t\tid: \"masthead\",\n\t\t\t},\n\t\t\tbuttons: {\n\t\t\t\ttag: \"div\",\n\t\t\t\tid: \"end\",\n\t\t\t\tinject: {\n\t\t\t\t\tid: \"buttons\",\n\t\t\t\t},\n\t\t\t},\n\t\t},\n\t\tyt_video: {\n\t\t\tchannel: {\n\t\t\t\ttag: \"ytd-channel-name\",\n\t\t\t\tid: { tag: \"a\" },\n\t\t\t},\n\t\t\ttitle: {\n\t\t\t\ttag: \"a\",\n\t\t\t\tid: \"video-title-link\",\n\t\t\t},\n\t\t},\n\t},\n};\n", "export class Identifiable {\n\tuuid = \"\";\n\tid = \"\";\n\tname = \"\";\n\n\tconstructor(id: string, name: string) {\n\t\tthis.uuid = Identifiable.generateUUID();\n\t\tthis.id = id;\n\t\tthis.name = name;\n\t}\n\n\tstatic generateUUID() {\n\t\tconst uuid = \"xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx\".replace(\n\t\t\t/[xy]/g,\n\t\t\tfunction(c) {\n\t\t\t\treturn (\n\t\t\t\t\tc === \"x\"\n\t\t\t\t\t\t? (Math.random() * 16) | 0\n\t\t\t\t\t\t: (((Math.random() * 16) | 0) & 0x3) | 0x8\n\t\t\t\t).toString(16);\n\t\t\t},\n\t\t);\n\t\treturn uuid;\n\t}\n\n\tstatic generateIdentifiable(name: string) {\n\t\tconst id = Identifiable.generateUUID();\n\t\treturn new Identifiable(id, name);\n\t}\n\n\tcompare(other: Identifiable) {\n\t\treturn this.id === other.id;\n\t}\n\n\tcompareUUID(other: Identifiable) {\n\t\treturn this.uuid === other.uuid;\n\t}\n}\n", "import { FxState } from \"framework/state/state\";\nimport { HTMLActions } from \"interfaces/component\";\nimport { Dispatch } from \"interfaces/dispatch\";\nimport { Identifiable } from \"object/abstract/identifiable\";\n\nconst REGEX_TEMPLATE = /\\{\\d+(.*?)\\}/g;\nconst REGEX_TENTATIVE = /\\{\\d+\\s*\\?\\s*[^:{}]+\\s*:\\s*[^{}]+\\}/;\nconst REGEX_TENTATIVE_TRUE = /\\?\\s*([^:}]+?)\\s*:/g;\nconst REGEX_TENTATIVE_FALSE = /:\\s*([^}]+?)\\s*}/g;\nconst REGEX_TENTATIVE_REMOVE_SYMBOL = /\\{*\\?*:*\\}*[\\s]*/g;\nconst REGEX_STATE = /\\s*(\\d+)/\n\nexport type ComponentProps<T extends HTMLElement = HTMLElement> = {\n\ttag?: string;\n\ttemplate?: string;\n\tstates?: FxState<any>[];\n\telement?: T;\n}\n\nexport class Component<T extends HTMLElement = HTMLElement> implements HTMLActions  {\n\n\tprivate element: T;\n\tprivate htmlTemplate: string = ``; \n\tprotected _states: FxState<any>[] = [];\n\tprivate _events$: Dispatch<void, void>[] = [];\n\n\tconstructor(props?: ComponentProps<T>) {\n\t\tconst tag = props?.tag ?? 'component';\n\t\tthis.element = props?.element ?? document.createElement(tag) as T;\n\t\tthis.setContent(props?.template ?? ``, ...(props?.states ?? []));\n\t}\n\n\tget elementRef(): T {\n\t\treturn this.element;\n\t}\n\n\t/**\n\t\t* html template should be set like the java log4j2 template: <div>{}</div>\n\t\t*/\n  setContent(html: string, ...args: FxState<any>[]) {\n\t\tthis.onDestroy();\n\t\tif (args.length > 0) {\n\t\t\tthis._states = args;\n\t\t\tthis._states.forEach((state) => {\n\t\t\t\tconst event = state.effect(() => this.render());\n\t\t\t\tthis._events$.push(event);\n\t\t\t});\n\t\t}\n\t\tthis.htmlTemplate = html.replace(/[\\n\\r\\t]/g, ``).trim();\t\n\t\tthis.render();\n\t}\t\n\n\tonDestroy() {\n\t\tthis._events$.forEach((event) => event());\n\t\tthis._events$ = [];\n\t}\n\n\tprivate render() {\n\t\t// Render the component's HTML template\n\t\t// This is a placeholder for actual rendering logic\n\t  if (this.element) {\n\t\t\tconst htmlTemplateCount = (this.htmlTemplate.match(/{}/g) || []).length;\n\t\t\tif (htmlTemplateCount !== this._states.length) {\n\t\t\t\t//console.error(new Error(\"[Component] Mismatch between number of placeholders and states provided.\"));\n\t\t\t}\n\t\t\tconst needToBeParsed = TemplateParser.parse(this.htmlTemplate);\n\t\t\tneedToBeParsed.forEach((item) => {\n\t\t\t\tconst stateIndex = item.stateIndex;\n\t\t\t\tif (stateIndex >= 0 && stateIndex < this._states.length) {\n\t\t\t\t\tconst stateContent = this._states[stateIndex]();\n\t\t\t\t\tif (stateContent !== undefined) {\n\t\t\t\t\t\titem.updateValue(stateContent);\n\t\t\t\t\t} \t\t\t\t\n\t\t\t\t} else {\n\t\t\t\t\titem.updateValue(``);\n\t\t\t\t}\n\t\t\t});\n\t\t\tthis.element.innerHTML = TemplateParser.rebuild(this.htmlTemplate, needToBeParsed);\n\t\t\tthis.postRender();\n\t\t} else {\n\t\t\tconsole.warn(\"Element is not defined, cannot render component.\");\n\t\t}\n\t}\n\n\n\t// This method is called after the component has been rendered\n\tprotected postRender(): void {\n\n\t}\n\n\n\tonClick(listener: Dispatch<Partial<MouseEvent>>): void {\n\t\tif (this.element) {\n\t\t\tthis.element.addEventListener(\"click\", (event: MouseEvent) => {\n\t\t\t\tlistener(event);\n\t\t\t});\n\t\t} else {\n\t\t\tconsole.warn(\"Element is not defined, cannot attach click listener.\");\n\t\t}\n\t}\n\n\tonMouseOver(listener: Dispatch<Partial<MouseEvent>>): void {\n\t\tif (this.element) {\n\t\t\tthis.element.addEventListener(\"mouseover\", (event: MouseEvent) => {\n\t\t\t\tlistener(event);\n\t\t\t});\n\t\t} else {\n\t\t\tconsole.warn(\"Element is not defined, cannot attach mouseover listener.\");\n\t\t}\n\t}\n\n\tonMouseOut(listener: Dispatch<Partial<MouseEvent>>): void {\n\t\tif (this.element) {\n\t\t\tthis.element.addEventListener(\"mouseout\", (event: MouseEvent) => {\n\t\t\t\tlistener(event);\n\t\t\t});\n\t\t} else {\n\t\t\tconsole.warn(\"Element is not defined, cannot attach mouseout listener.\");\n\t\t}\n\t}\n\n}\n\n\nclass TemplateParsed {\n\treadonly id: string = Identifiable.generateUUID();\n\t//-1 = no state\n\treadonly stateIndex: number = -1;\n\treadonly offset: number = 0;\n\tprivate content: string = ``; \n\tprivate length: number = 0 ;\n\treadonly originalLength: number = 0;\n\treadonly source: string = ``;\n\n\tconstructor(content: string, offset: number, source: string, stateIndex: number = -1) {\n\t\tthis.content = content;\n\t\tthis.offset = offset;\n\t\tthis.source = source;\n\t\tthis.length = content.length;\n\t\tthis.originalLength = content.length;\n\t\tthis.stateIndex = stateIndex;\n\t}\n\n\tprivate isTentative(): boolean {\n\t\treturn REGEX_TENTATIVE.test(this.content);\n\t}\n\n\tupdateValue(value: string) {\n\t\tconst isTentative = this.isTentative();\n\t\tif (isTentative) {\n\t\t\t//set the value to the True or False tentative expression\n\t\t\tconst tentativeTrue = this.content.match(REGEX_TENTATIVE_TRUE)?.find((match) => match !== undefined);\n\t\t\tconst tentativeFalse = this.content.match(REGEX_TENTATIVE_FALSE)?.find((match) => match !== undefined);\n\t\t\tif (tentativeTrue && tentativeFalse) {\n\t\t\t\tif (value) {\n\t\t\t\t\tvalue = tentativeTrue.replace(REGEX_TENTATIVE_REMOVE_SYMBOL, ``);\n\t\t\t\t} else {\n\t\t\t\t\tvalue = tentativeFalse.replace(REGEX_TENTATIVE_REMOVE_SYMBOL, ``);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tconsole.warn(`[TemplateParsed] Tentative expression is not valid: ${this.content}`);\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\t\t// replace the digit or expression (have a check here) {0} -> value, or {0 ? True : False} -> True or False\t\n\t\tconst content = this.content.replace(REGEX_TEMPLATE, value);\n\t\tthis.setContent(content);\n\t}\n\n\tsetContent(content: string) {\n\t\tthis.content = content;\n\t\tthis.length = content.length;\n\t}\n\n\tgetContent(): string {\n\t\treturn this.content;\n\t}\n\n\tget lengthValue(): number {\n\t\treturn this.length;\n\t}\n\n}\n\nclass TemplateParser {\n\n\tstatic parse(template: string): TemplateParsed[] { \n\t\tconst parsed: TemplateParsed[] = [];\n\n\t\t// state index is in the first number of the template, e.g. {0} or {1}\n\t\tfor (const match of template.matchAll(REGEX_TEMPLATE)) {\n\t\t\tconst content = match[0];\n\t\t\tconst offset = match.index || 0;\n\t\t\t// Extract the state index from the content, e.g. {0} -> 0\n\t\t\tconst stateIndexMatch = content.match(REGEX_STATE);\n\t\t\tconst source = template;\n\t\t\tconst parsedItem = new TemplateParsed(content, offset, source, stateIndexMatch ? parseInt(stateIndexMatch[1], 10) : -1);\n\t\t\tparsed.push(parsedItem);\n\t\t}\n\n\t\treturn parsed;\n\t}\n\n\tstatic rebuild(template: string, parsed: TemplateParsed[]): string {\n\t\tlet rebuiltTemplate = template;\n\t\tlet offsetDelta = 0;\n\t\tparsed.forEach((item) => {\n\t\t\tconst offset = item.offset + offsetDelta;\n\t\t\tif (item.stateIndex >= 0) {\n\t\t\t\t// Replace the placeholder with the content of the state\n\t\t\t\tconst stateContent = item.getContent();\n\t\t\t\trebuiltTemplate = rebuiltTemplate.slice(0, offset) + stateContent + rebuiltTemplate.slice(offset + item.originalLength);\n\t\t\t\toffsetDelta += stateContent.length - item.originalLength;\n\t\t\t} else {\n\t\t\t\t// Just remove the placeholder\n\t\t\t\trebuiltTemplate = rebuiltTemplate.slice(0, offset) + rebuiltTemplate.slice(offset);\n\t\t\t}\n\t\t});\n\t\treturn rebuiltTemplate;\n\t}\n} \n", "import { Component } from \"framework/element/component\";\nimport { FxState } from \"framework/state/state\";\n\nconst TEMPLATE = \n`<div id=\"wt-toggle\" class=\"wt-toggle {0 ? on : off}\">\n\t<h2>{0 ? Enabled : Disabled}</h2>\n</div>` \n\n\ntype ToggleProps = {\n\ttag?: string;\n\ttemplate?: string;\n\tstate: FxState<boolean>;\n\tonClick?: (state: Partial<MouseEvent>) => void;\n}\n\nexport class ToggleComponent extends Component {\n\n\tconstructor({tag, template, state, onClick}: ToggleProps) {\n\t\tsuper({\n\t\t\ttag: tag ?? \"toggle-component\",\n\t\t\ttemplate: template ?? TEMPLATE,\n\t\t\tstates: [state],\n\t\t});\n\t\tonClick && this.onClick(onClick)\n\t}\n\t\n}\n", "import { FxState } from \"framework/state/state\";\nimport { ChromeExtension } from \"..\";\nimport { Identifiable } from \"./abstract/identifiable\";\nimport { ToggleComponent } from \"framework/components/ToggleComponent\";\nimport { MessageHandler } from \"handler/messagehandler\";\n\nexport class Video extends Identifiable {\n\tisShort = false;\n\tdom: HTMLElement | null = null;\n\tdisabled: FxState<boolean> | null = null;\n\tinjected = false;\n\n\tconstructor(id: string, name: string, isShort: boolean, dom: HTMLElement) {\n\t\tsuper(id, name);\n\t\tthis.isShort = isShort;\n\t\tthis.dom = dom;\n\t\tChromeExtension.enabled.effect(() => {\n\t\t\tthis.refresh();\n\t\t});\n\t}\n\n\trefresh() {\n\t\tif (!this.dom) return;\n\t\tif (!this.disabled) return;\n\t\tif (ChromeExtension.enabled()) {\n\t\t\tif (this.disabled()) {\n\t\t\t\tthis.dom.style.display = \"none\";\n\t\t\t} else {\n\t\t\t\tthis.dom.style.display = \"block\";\n\t\t\t}\n\t\t} else {\n\t\t\tthis.dom.style.display = \"block\";\n\t\t}\n\t}\n\n\t/**\n\t */\n\tinject(disabled: FxState<boolean>) {\n\t\tif (!this.dom) return;\n\t\tif (this.dom.dataset.whitelisted) {\n\t\t\tthis.injected = true;\n\t\t\treturn;\n\t\t}\n\n\t\tthis.disabled = disabled;\n\t\tconst element = new ToggleComponent({\n\t\t\ttag: \"video-toggle-component\",\n\t\t\ttemplate: `\n\t\t\t<div id=\"whitelist-spot\" class=\"\">\n\t\t\t\t<h2>{0 ? + : -}</h2>\n\t\t\t</div>\n\t\t\t`,\n\t\t\tstate: disabled,\n\t\t\tonClick: () => {\n\t\t\t\tconst state = disabled();\n\t\t\t\tdisabled.set(!state);\n\t\t\t},\n\t\t});\n\n\t\tdisabled.effect(() => {\n\t\t\tthis.refresh();\n\t\t});\n\n\t\tthis.dom.appendChild(element.elementRef);\n\t\tthis.dom.dataset.whitelisted = \"true\";\n\t}\n}\n", "import { ChromeExtension } from \"..\";\nimport { YoutubeSettings } from \"../constants/settings\";\nimport { Video } from \"../object/video\";\n\nexport class VideoFactory {\n\tstatic createVideo(video_dom: HTMLElement) {\n\n\t\tfunction extractVideoId(url: string) {\n\t\t\tvar match = url.match(/(?:youtube\\.com\\/(?:[^\\/]+\\/.+\\/|(?:v|e(?:mbed)?)\\/|.*[?&]v=)|youtu\\.be\\/)([^\"&?\\/\\s]{11})/);\n\t\t\treturn match && match[1];\n\t\t}\n\n\t\tfunction getTitleAndID() {\n\t\t\tconst is_home = ChromeExtension.page_instance.page === \"home\";\n\t\t\tlet anchor_tags: HTMLCollectionOf<Element>;\n\t\t\tif (is_home) {\n\t\t\t\tanchor_tags = video_dom.getElementsByTagName(YoutubeSettings.home.yt_video_title.tag);\n\t\t\t} else {\n\t\t\t\tanchor_tags = video_dom.getElementsByTagName(YoutubeSettings.video.yt_video_title.tag);\n\t\t\t}\n\n\t\t\tfor (let i = 0; i < anchor_tags.length; i++) {\n\t\t\t\tconst anchor = anchor_tags[i] as HTMLAnchorElement;\n\t\t\t\tif (is_home) {\n\t\t\t\t\tif (anchor.id === YoutubeSettings.home.yt_video_title.id) {\n\t\t\t\t\t\treturn { title: anchor.innerText, id: extractVideoId(anchor.href) };\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tif (anchor.id === YoutubeSettings.video.yt_video_title.id) {\n\t\t\t\t\t\tconst href_dom = video_dom.getElementsByTagName(YoutubeSettings.video.yt_video_link.tag)[0] as HTMLAnchorElement;\n\t\t\t\t\t\tconst href = href_dom.href;\n\t\t\t\t\t\treturn { title: anchor.innerText, id: extractVideoId(href) };\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn { title: '', id: '' };\n\t\t}\n\n\t\tfunction getChannelName() {\n\t\t\tconst is_home = ChromeExtension.page_instance.page === \"home\";\n\n\t\t\tlet channel_tag: HTMLCollectionOf<Element>;\n\t\t\tif (is_home) {\n\t\t\t\tchannel_tag = video_dom.getElementsByTagName(YoutubeSettings.generic.yt_video.channel.tag);\n\t\t\t} else {\n\t\t\t\tchannel_tag = video_dom.getElementsByTagName(YoutubeSettings.video.channel.tag);\n\t\t\t}\n\t\t\tfor (let i = 0; i < channel_tag.length; i++) {\n\t\t\t\tlet search: HTMLAnchorElement | { innerText: string, href: string } | null = null;\n\t\t\t\tif (is_home)\n\t\t\t\t\tsearch = channel_tag[i].getElementsByTagName(YoutubeSettings.generic.yt_video.channel.id.tag)[0] as HTMLAnchorElement;\n\t\t\t\telse {\n\t\t\t\t\tconst link_container = video_dom.querySelector(\"#\" + YoutubeSettings.video.channel.link.container);\n\t\t\t\t\tif (!link_container) {\n\t\t\t\t\t\tconsole.error(\"[channel] No link container\");\n\t\t\t\t\t\treturn { name: '', id: '' };\n\t\t\t\t\t}\n\n\t\t\t\t\tlet link_anchor = link_container.getElementsByTagName(YoutubeSettings.video.channel.link.tag);\n\t\t\t\t\tlet link = \"\";\n\t\t\t\t\tfor (let i = 0; i < link_anchor.length; i++) {\n\t\t\t\t\t\tconst link_dom = link_anchor[i] as HTMLAnchorElement;\n\t\t\t\t\t\tif (link_dom.className === YoutubeSettings.video.channel.link.class) {\n\t\t\t\t\t\t\tlink = link_dom.href;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tsearch = { innerText: (channel_tag[i] as HTMLElement)!.title, href: link };\n\t\t\t\t}\n\n\n\t\t\t\tif (search) {\n\t\t\t\t\treturn { name: search.innerText, id: search.href };\n\t\t\t\t}\n\n\t\t\t}\n\t\t\treturn { name: '', id: '' };\n\n\t\t}\n\n\t\treturn { video: new Video(getTitleAndID().id ?? '', getTitleAndID().title, false, video_dom), channelname: getChannelName() };\n\n\t}\n}\n", "//@ts-nocheck\n//static table\nexport type ChromeMessage = {\n\ttype: string;\n\tchannel?: string;\n\tchannels?: string[];\n\tenabled?: boolean;\n}\n\n\nexport class Browser {\n\tpublic static get isFirefox() {\n\t\treturn navigator.userAgent.toLowerCase().indexOf(\"firefox\") > -1;\n\t}\n\tpublic static get browser(): any | undefined {\n\t\t//@ts-ignore\n\t\tif (chrome) {\n\t\t\treturn chrome;\n\t\t} else {\n\t\t\treturn browser;\n\t\t}\n\t}\n}\n", "import { Dispatch } from \"interfaces/dispatch\";\nimport { Browser, ChromeMessage } from \"../interfaces/browser\";\n\n//communicate with service workers\nexport class MessageHandler {\n\tstatic send(message: ChromeMessage, callback?: Dispatch) {\n\t\tBrowser.browser.runtime.sendMessage(message, (response: any) => {\n\t\t\tconst lastError = Browser.browser.runtime.lastError;\n\t\t\tif (lastError) {\n\t\t\t\tconsole.error(\"[MessageHandler] Error: %s\", lastError.message);\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tif (callback) callback(response);\n\t\t});\n\t}\n\n\tstatic addChannel(channel: string, callback?: Dispatch) {\n\t\tthis.send({ type: \"add-channel\", channel: channel }, callback);\n\t}\n\n\tstatic removeChannel(channel: string, callback?: Dispatch) {\n\t\tthis.send({ type: \"remove-channel\", channel: channel }, callback);\n\t}\n\n\tstatic onMessage(callback: Function) {\n\t\tBrowser.browser.runtime.onMessage.addListener(() => callback());\n\t}\n}\n", "export class TimeoutError extends Error {\n\tconstructor(message: string) {\n\t\tsuper(message);\n\t\tthis.name = \"TimeoutError\";\n\t}\n}\n", "import { Dispatch } from \"../framework/tagger\";\n\nexport async function sleep(callback: Dispatch, timeout: number) {\n\treturn new Promise((resolve, _reject) => {\n\t\tsetTimeout(() => {\n\t\t\tresolve(callback());\n\t\t}, timeout);\n\t});\n}\n", "import { Dispatch } from \"framework/tagger\";\nimport { ChromeExtension } from \"..\";\nimport { SleepSettings, YoutubeSettings } from \"../constants/settings\";\nimport { TimeoutError } from \"../error/timeout\";\nimport { EngineInstance } from \"../interfaces/engine\";\nimport { Pages } from \"../interfaces/pages\";\nimport { sleep } from \"../util/sleep\";\nimport { Identifiable } from \"object/abstract/identifiable\";\nimport { Browser } from \"interfaces/browser\";\n\nexport class PageHandler {\n\tinit = false;\n\tpage_loaded = false;\n\tstatic engine_running = false;\n\tpage: Pages = \"home\";\n\tengine_instance: EngineInstance[] = [];\n\t_onVideoRefresh: Dispatch[] = [];\n\t_onPageLoad: Dispatch[] = [];\n\n\n\tconstructor() {\n\n\t}\n\n\tasync start() {\n\t\tthis.getPage().then((page: Pages) => {\n\t\t\tthis.page = page;\n\t\t\tconsole.log(\"Page: \", this.page);\n\t\t\tthis.pageLoaded();\n\t\t});\n\t}\n\n\tstatic craft_engine_instance(instance: string, page: Pages): EngineInstance {\n\t\treturn {\n\t\t\tengine: instance,\n\t\t\tpage: page\n\t\t};\n\t}\n\n\tisPageLoading() {\n\t\treturn !this.page_loaded;\n\t}\n\n\tisVideoOnPage() {\n\t\t//check where we are\n\t\tlet video: HTMLCollectionOf<Element>;\n\t\tif (this.page === \"home\")\n\t\t\tvideo = document.getElementsByTagName(YoutubeSettings.home.yt_video);\n\t\telse\n\t\t\tvideo = document.getElementsByTagName(YoutubeSettings.video.yt_video);\n\t\treturn video.length > 0;\n\t}\n\n\trefreshPage(callback = (_page: Pages, _update: boolean) => { }) {\n\t\tthis.getPage().then((page) => {\n\t\t\tlet update = false;\n\t\t\tif (this.page !== page) {\n\t\t\t\tupdate = true;\n\t\t\t\tPageHandler.engine_running = false;\n\t\t\t\tthis.page_loaded = false;\n\t\t\t\tthis.page = page;\n\t\t\t\tthis.pageLoaded();\n\t\t\t}\n\t\t\tcallback(page, update);\n\t\t});\n\t}\n\n\tstatic async WaitForElement(div_function: () => any, indefinite = false) {\n\t\tlet div = div_function();\n\t\tlet attempts = 0;\n\n\t\twhile (!div) {\n\t\t\tif (attempts >= SleepSettings.max_attempts && !indefinite) {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tawait sleep(() => { attempts++ }, SleepSettings.waiting);\n\t\t\tdiv = div_function();\n\t\t}\n\t\tif (attempts >= SleepSettings.max_attempts) {\n\t\t\tconsole.error(\"[WT] Can't find element, I'm giving up...\")\n\t\t\tthrow new TimeoutError(\"Can't find element\");\n\t\t} else\n\t\t\treturn div;\n\t}\n\n\tasync WaitUntilHeaderLoaded(callback = () => { }) {\n\n\t\ttry {\n\t\t\tlet header_container = await PageHandler.WaitForElement(() => document.getElementsByTagName(YoutubeSettings.generic.header.container.tag)[0]);\n\n\t\t\tawait PageHandler.WaitForElement(() => header_container.querySelector(\"#\" + YoutubeSettings.generic.header.buttons.id));\n\n\t\t\tcallback();\n\n\t\t} catch (e: any) {\n\t\t\tconsole.error(\"[inject::header], %s\", e.message);\n\t\t\treturn;\n\t\t}\n\n\t}\n\n\tasync engine() {\n\t\tconst loop_id = Identifiable.generateUUID();\n\t\tconst page = this.page;\n\t\tif (PageHandler.engine_running) {\n\t\t\tconsole.log(\"[%s] Engine already running (%s)\", page, loop_id);\n\t\t\treturn;\n\t\t} else {\n\t\t\tconsole.log(\"[%s] Engine not running (%s)\", page, loop_id);\n\t\t}\n\t\tPageHandler.engine_running = true;\n\t\tthis.engine_instance.push(PageHandler.craft_engine_instance(loop_id, page));\n\t\tconsole.log(\"[%s] Engine started (%s)\", page, loop_id);\n\t\twhile (this.page_loaded) {\n\t\t\tif (this.page != page) break;\n\n\t\t\tlet another_instance = false;\n\t\t\tthis.engine_instance.forEach((instance) => {\n\t\t\t\tif (instance.engine != loop_id && instance.page == page) another_instance = true;\n\t\t\t});\n\t\t\tif (another_instance) break;\n\n\t\t\tthis._onVideoRefresh.forEach(async (callback: Dispatch) => {\n\t\t\t\tif (this.page != page) return;\n\t\t\t\tcallback();\n\t\t\t});\n\t\t\tawait sleep(() => { }, SleepSettings.engine);\n\t\t}\n\t\tthis.engine_instance = this.engine_instance.filter(instance => instance.engine != loop_id);\n\t\tconsole.log(\"[%s]Engine stopped (%s)\", page, loop_id);\n\t}\n\n\tasync pageLoaded() {\n\n\t\tif (ChromeExtension.currentPage == \"channel\") {\n\t\t\tawait PageHandler.WaitForElement(() => document.querySelector(YoutubeSettings.channel.channel.tag), true);\n\t\t} else {\n\t\t\tawait PageHandler.WaitForElement(() => this.isVideoOnPage(), true);\n\t\t}\n\t\tthis.page_loaded = true;\n\t\tthis._onPageLoad.forEach(callback => {\n\t\t\tcallback();\n\t\t});\n\t\tthis.engine.bind(this)();\n\t}\n\n\tasync getPage(): Promise<Pages> {\n\t\treturn new Promise((resolve, _reject) => {\n\t\t\t//@ts-ignore\n\t\t\tBrowser.browser.runtime.sendMessage({ type: \"get-page\" }, (response) => {\n\t\t\t\tresolve(response.page as Pages);\n\t\t\t});\n\t\t});\n\t}\n\n\n\t/**\n\t * @param {Function} callback The callback to be called when a video is refreshed\n\t */\n\tset onVideoRefresh(callback: Dispatch) {\n\t\tthis._onVideoRefresh.push(callback);\n\t}\n\n\t/**\n\t * @param {Function} callback The callback to be called when the page is loaded\n\t */\n\tset onPageLoad(callback: Dispatch) {\n\t\tthis._onPageLoad.push(callback);\n\t}\n\n}\n\n\n", "import { Dispatch } from \"interfaces/dispatch\";\nimport { Identifiable } from \"object/abstract/identifiable\";\n\ntype Effect<ObjectType> = Dispatch<Dispatch<ObjectType,void>, Dispatch<void,void>>;\n\nexport type FxState<ObjectType> = {\n\t(): ObjectType | undefined;\n\tset: (newState: ObjectType) => void;\n\teffect: Effect<ObjectType>;\n};\n\nexport class State<ObjectType> {\n\n\tprivate state: ObjectType | undefined;\n\tprivate readonly _events: Map<Identifiable, (obj?:ObjectType) => void> = new Map();\n\n\tconstructor(state?: ObjectType) {\n\t\tthis.state = state;\n\t}\t\n\n\tstateValue(): ObjectType | undefined {\n\t\treturn this.state;\n\t}\n\n\tasync setState(newState: ObjectType) {\n\t\tif(this.state === newState || this.state == newState) return;\n\t\tthis.state = newState;\n\t\tthis._events.forEach((callback) => callback(newState));\n\t}\n\n\tprivate deleteEvent(id: Identifiable): void {\n\t\tif (this._events.has(id)) {\n\t\t\tthis._events.delete(id);\n\t\t} else {\n\t\t\tconsole.warn(`Event with id ${id} does not exist.`);\n\t\t}\n\t}\n\n\teffect(effect: Dispatch<ObjectType, void>): Dispatch<void, void> {\n\t\tconst id = Identifiable.generateIdentifiable(`effect_func.${this._events.size}`);\n\t\tthis._events.set(id, (newState?: ObjectType) => {\n\t\t\tif (newState !== undefined) {\n\t\t\t\teffect(newState);\n\t\t\t}\n\t\t});\n\t\treturn this.deleteEvent.bind(this, id);\n\t}\n\n}\n\nexport function createState<ObjectType>(initialState: ObjectType): FxState<ObjectType> {\n\tconst statePrototype = new State<ObjectType>(initialState);\n\n\tconst fxState = () => statePrototype.stateValue.bind(statePrototype)() as ObjectType | undefined;\n\n\tfxState.set = (newState: ObjectType) => {\n\t\tstatePrototype.setState.bind(statePrototype)(newState);\n\t};\n\n\tfxState.effect = statePrototype.effect.bind(statePrototype) as Effect<ObjectType>; \n\n\treturn fxState;\n}\n", "import { createState, FxState } from \"framework/state/state\";\nimport { Identifiable } from \"./abstract/identifiable\";\nimport { Video } from \"./video\";\nimport { MessageHandler } from \"handler/messagehandler\";\nimport { ChromeExtension } from \"index\";\n\nexport class Channel extends Identifiable {\n\tvideos: Video[] = [];\n\n\tprivate disabled: FxState<boolean> = createState(false);\n\tprivate disableDisplayState = createState(this.disabledState ?? false);\n\n\tconstructor(id: string, name: string) {\n\t\tsuper(id, name);\n\t\tthis.disabled.effect(async (state) => {\n\t\t\tconsole.log(\n\t\t\t\t`Channel ${this.name} is now ${state ? \"disabled\" : \"enabled\"}.`,\n\t\t\t);\n\t\t\tthis.disableDisplayState.set(state);\n\t\t});\n\t\tthis.disableDisplayState.effect((state) => {\n\t\t\tif (!state) {\n\t\t\t\tMessageHandler.addChannel(this.name);\n\t\t\t\tChromeExtension.addAllowedChannel(this.name, () => { });\n\t\t\t} else {\n\t\t\t\tMessageHandler.removeChannel(this.name);\n\t\t\t\tChromeExtension.removeAllowedChannel(this.name, () => { });\n\t\t\t}\n\t\t});\n\t}\n\n\tdoesVideoExist(video: Video) {\n\t\tif (video instanceof Video) {\n\t\t\tconst first_search = this.videos.find((v) => v.compare(video));\n\t\t\tif (first_search) return first_search;\n\t\t}\n\t\treturn false;\n\t}\n\n\taddVideo(video: Video) {\n\t\tif (video instanceof Video) {\n\t\t\tconst _video = this.doesVideoExist(video);\n\t\t\tif (_video) {\n\t\t\t\tthis.removeVideo(_video);\n\t\t\t}\n\n\t\t\tvideo.inject(this.disableDisplayState);\n\n\t\t\tthis.videos.push(video);\n\t\t\treturn video;\n\t\t} else return false;\n\t}\n\n\t//remove video?\n\tremoveVideo(video: Video) {\n\t\tif (video instanceof Video) {\n\t\t\tthis.videos = this.videos.filter((v) => !v.compare(video));\n\t\t}\n\t}\n\n\tenable() {\n\t\tthis.disabled.set(false);\n\t}\n\n\tdisable() {\n\t\tthis.disabled.set(true);\n\t}\n\n\trefresh() {\n\t\tthis.videos.forEach((video) => video.refresh());\n\t}\n\n\tget disabledState(): boolean | undefined {\n\t\treturn this.disabled();\n\t}\n}\n", "import { Component } from \"framework/element/component\";\nimport { createState, FxState } from \"framework/state/state\";\n\n\ntype InputComponentProps = {\n\telement?: HTMLInputElement;\n\tvalueState: FxState<string>;\n}\n\nexport class InputComponent extends Component<HTMLInputElement> {\n\n\tprivate readonly localState: FxState<string>;\n\n\tconstructor({\telement, valueState }: InputComponentProps) {\n\t\tsuper({\n\t\t\telement: element,\n\t\t\ttag: \"input\",\n\t\t})\n\t\tthis.localState = valueState; \n\t\tthis.setContent(``, this.localState);\n\t}\n\n\tprotected override postRender(): void {\n\t\tthis.elementRef.value = this.localState?.() ?? \"\";\n\t\tthis.elementRef.type = \"text\";\n\t\tthis.elementRef.classList.add(\"tag\");\n\t\tthis.elementRef.addEventListener(\"input\", (Event) => {\n\t\t\tconst input = Event.target as HTMLInputElement;\n\t\t\tthis.localState.set(input.value);\n\t\t});\n\t\tsuper.postRender();\n\t}\n\n\n}\n", "import { Component } from \"framework/element/component\";\nimport { createState, FxState } from \"framework/state/state\";\nimport { InputComponent } from \"./InputComponent\";\nimport { Serializer } from \"index\";\n\nconst TEMPLATE = \n`\n<div id=\"wt-serializer\">\n\t<h2>Export/Import</h2>\n\t<div id=\"toggle-page\" class=\"sync-page {0 ? open : close}\">\n\t\t<div class=\"tag flex column wrap\">\n\t\t\t<h2 class=\"tag\">Channel Serializer: {1} Channel(s)</h2>\n\t\t\t<input-box class=\"fill-width\">\n\t\t\t</input-box>\n\t\t\t<span class=\"tag error\">{2}</span>\n\t\t\t<div class=\"flex column wrap gap-01\"> \n\t\t\t</div>\n\t\t</div>\n\t</div>\n</div>\n`\n\ntype SyncPageProps = {\n\tstates: {\n\t  channelList: FxState<string[]>\t\n\t}\n}\n\nexport class SyncPage extends Component {\n\n  private open: FxState<boolean> = createState(false); \n\tprivate readonly channelList: FxState<string[]>;\n\tprivate readonly channelListJSON: FxState<string>;\n  private readonly channelListLength: FxState<number>\n\tprivate readonly errorMessage: FxState<string> = createState(\"\");\t\n\tprivate inputComponent?: InputComponent;\n\n\tconstructor({states}: SyncPageProps) {\n\t\tsuper({\n\t\t\ttag: \"sync-page\",\n\t\t});\n\n\t\tthis.channelList = states.channelList;\n\t\tthis.channelListLength = createState(this.channelList()?.length ?? 0);\n\t\tthis.channelListJSON = createState(JSON.stringify(this.channelList()) ?? \"\");\n\n\t\tthis.channelList.effect((list) => {\n\t\t\tthis.channelListLength.set(list.length);\n\t\t\tconst json = Serializer.exportChannels(list);\n\t\t\tthis.channelListJSON.set(json ?? \"[]\");\n\t\t});\n\n\t\tthis.channelListJSON.effect((json) => {\n\t\t\ttry {\n\t\t\t\tconst object = Serializer.importChannels(json);\n\t\t\t\tif (Array.isArray(object)) {\n\t\t\t\t\tthis.channelList.set([...object]);\n\t\t\t\t\tthis.errorMessage.set(\"\");\n\t\t\t\t} else {\n\t\t\t\t\tthis.errorMessage.set(\"Invalid JSON format for channel list (Must be an Array). This will not be saved.\");\n\t\t\t\t\tconsole.error(\"Invalid JSON format for channel list:\", json);\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (e) {\n\t\t\t\tthis.errorMessage.set(\"Invalid JSON format for channel list. This will not be saved.\");\n\t\t\t\tconsole.error(\"Invalid JSON format for channel list:\", e);\n\t\t\t}\n\t\t});\n\n\t\tsuper.setContent(TEMPLATE, this.open, this.channelListLength, this.errorMessage);\n\n\t\tsuper.onClick(() => {\n\t\t\tthis.open.set(!this.open());\n\t\t});\n\t}\n\n\tprotected override postRender(): void {\n\t\tconst togglePage = this.elementRef.querySelector(\"#toggle-page\");\n\t\tif (togglePage) {\n\t\t\ttogglePage.addEventListener(\"click\", (e) => {\n\t\t\t\te.stopPropagation();\n\t\t\t});\n\t\t}\n\t\tconst inputBox = this.elementRef.querySelector(\"input-box\"); \n\t\tif (inputBox) {\n\t\t\tif (!this.inputComponent) {\n\t\t\t\tthis.inputComponent = new InputComponent({\n\t\t\t\t\tvalueState: this.channelListJSON,\n\t\t\t\t})\n\t\t\t}\n\t\t\tinputBox.appendChild(this.inputComponent.elementRef);\n\t\t}\n\n\t\tsuper.postRender();\n\t}\n\n\n}\n", "import { VideoFactory } from \"./factory/videofactory\";\nimport { YoutubeSettings } from \"./constants/settings\";\nimport { MessageHandler } from \"./handler/messagehandler\";\nimport { PageHandler } from \"./handler/pagehandler\";\nimport { Channel } from \"./object/channel\";\nimport \"./styles/styles.scss\";\nimport \"./styles/tagger.scss\";\nimport { Browser } from \"./interfaces/browser\";\nimport { createState, FxState } from \"framework/state/state\";\nimport { ToggleComponent } from \"framework/components/ToggleComponent\";\nimport { SyncPage } from \"framework/components/SyncPage\";\n//check if page is still loading\n\nclass ChannelCache {\n\tchannels: Channel[] = []; //Channel\n\n\tconstructor() { }\n\n\tdoesChannelExist(channel: Channel) {\n\t\tif (channel instanceof Channel) {\n\t\t\treturn this.channels.find((c) => c.compare(channel));\n\t\t}\n\t\treturn false;\n\t}\n\n\t//methods\n\taddChannel(channel: Channel) {\n\t\tif (channel instanceof Channel) {\n\t\t\tconst _channel = this.doesChannelExist(channel);\n\t\t\tif (!this.doesChannelExist(channel)) {\n\t\t\t\tthis.channels.push(channel);\n\t\t\t\treturn channel;\n\t\t\t} else {\n\t\t\t\treturn _channel;\n\t\t\t}\n\t\t}\n\t}\n\n\tdisableVideos() {\n\t\tthis.channels.forEach((channel) => {\n\t\t\tchannel.disable();\n\t\t});\n\t}\n\n\tenableVideos() {\n\t\tthis.channels.forEach((channel) => {\n\t\t\tchannel.enable();\n\t\t});\n\t}\n\n\tclearCache() {\n\t\tthis.channels = [];\n\t}\n}\n\nexport class Serializer {\n\tstatic importChannels(channels: string) {\n\t\ttry {\n\t\t\tconst json_parsed = JSON.parse(channels) as string[];\n\t\t\tif (Array.isArray(json_parsed)) {\n\t\t\t\treturn json_parsed;\n\t\t\t}\n\t\t\tthrow new Error(`Invalid JSON : (${channels})`);\n\t\t} catch (e) {\n\t\t\tconsole.error(\"[serializer::import] Error: %s (obj: %s)\", e, channels);\n\t\t\treturn undefined;\n\t\t}\n\t}\n\n\tstatic exportChannels(channels: string[]) {\n\t\ttry {\n\t\t\tconst json_channels = JSON.stringify(channels);\n\t\t\treturn json_channels;\n\t\t} catch (e) {\n\t\t\tconsole.error(\"[serializer::export] Error: %s\", e);\n\t\t\treturn undefined;\n\t\t}\n\t}\n}\n\ninterface HTMLChannelElement extends HTMLElement {\n\tdataset: {\n\t\tchannel: string;\n\t};\n}\n\nexport class ChromeExtension {\n\tchannels = new ChannelCache();\n\tstatic readonly allowed_channels: FxState<string[]> = createState<string[]>(\n\t\t[],\n\t); //string\n\tstatic page_instance = new PageHandler();\n\tstatic enabled: FxState<boolean> = createState(false);\n\tsearching = false;\n\tstarted = false;\n\n\tconstructor(allowed_channels: string[]) {\n\t\tChromeExtension.allowed_channels.set(allowed_channels);\n\t\tChromeExtension.page_instance.start();\n\t\tthis.start();\n\t}\n\n\tstatic get currentPage() {\n\t\treturn ChromeExtension.page_instance.page;\n\t}\n\n\t//methods\n\n\tstatic async getEnabled(): Promise<boolean> {\n\t\treturn new Promise((resolve, _) => {\n\t\t\tMessageHandler.send({ type: \"get-enabled\" }, (response: any) => {\n\t\t\t\tresolve(response.enabled);\n\t\t\t});\n\t\t});\n\t}\n\n\tstatic setEnabled(enabled: boolean) {\n\t\tMessageHandler.send({ type: \"set-enabled\", enabled: enabled });\n\t}\n\n\tasync start() {\n\t\tMessageHandler.send({ type: \"get-channels\" }, (response) => {\n\t\t\tif (response.type === \"query-channels\") {\n\t\t\t\tChromeExtension.allowed_channels.set(response.channels);\n\t\t\t}\n\t\t});\n\t}\n\n\tprivate static async generateTogglePage() {\n\t\t/**\n\t\tconst channel_input = tinput(\"text\", \"Input Channel JSON Here\", \"\");\n\t\tconst flex = tflex([\"column\", \"wrap\"], \"gap-02\", {},\n\t\t\tth2(\"Channel Serializer\"),\n\t\t\tchannel_input.input,\n\t\t\ttflex([\"column\", \"align-center\"], \"gap-01\", {},\n\t\t\t\ttbutton(() => {\n\t\t\t\t\tconst channels = Serializer.importChannels(channel_input.state.state());\n\t\t\t\t\tif (channels) {\n\t\t\t\t\t\tMessageHandler.send({ type: \"set-channels\", channels: channels }, () => {\n\t\t\t\t\t\t\tChromeExtension.refreshChannels();\n\t\t\t\t\t\t});\n\t\t\t\t\t} else {\n\t\t\t\t\t\talert(\"Invalid JSON/ChannelScript\");\n\t\t\t\t\t}\n\t\t\t\t}, \"Submit\", \"fill-width\")\n\t\t\t),\n\t\t\ttbutton(() => {\n\t\t\t\tconst export_string = Serializer.exportChannels(ChromeExtension.allowed_channels);\n\t\t\t\tconsole.log(\"[serializer] Exporting: %s\", export_string);\n\t\t\t\t//copy to clipboard\n\t\t\t\tnavigator.clipboard.writeText(export_string ?? \"[]\").then(() => {\n\t\t\t\t\tconsole.log(\"[serializer] Copied to clipboard\");\n\t\t\t\t}).catch((err) => {\n\t\t\t\t\tconsole.error(\"[serializer] Error: %s (clipboard failed)\", err);\n\t\t\t\t});\n\n\t\t\t\talert(\"Channels exported to clipboard\");\n\n\t\t\t}, \"Channels to Clipboard\", \"fill-width\"),\n\t\t);\n\t\tconst page = t_toggle_page(\"right-0\", {}, flex);\n\t\treturn page;\n\t\t*/\n\t}\n\n\tstatic async generateSerializerDiv() {\n\t\treturn new SyncPage({\n\t\t\tstates: {\n\t\t\t\tchannelList: ChromeExtension.allowed_channels,\n\t\t\t},\n\t\t});\n\t}\n\n\tstatic async generateToggleDiv() {\n\t\tChromeExtension.enabled.set(await ChromeExtension.getEnabled());\n\n\t\tconst div = new ToggleComponent({\n\t\t\tstate: ChromeExtension.enabled,\n\t\t\tonClick: () => {\n\t\t\t\tconst value = ChromeExtension.enabled();\n\t\t\t\tChromeExtension.enabled.set(!value);\n\t\t\t\tChromeExtension.setEnabled(!value);\n\t\t\t},\n\t\t});\n\n\t\treturn div;\n\t}\n\n\tasync injectHeader() {\n\t\tconst header = document.getElementsByTagName(\n\t\t\tYoutubeSettings.generic.header.container.tag,\n\t\t)[0];\n\t\tif (!header) return;\n\t\tconst buttons_container = header.querySelector(\n\t\t\t\"#\" + YoutubeSettings.generic.header.buttons.id,\n\t\t);\n\t\tconst injection_spot = header.querySelector(\n\t\t\t\"#\" + YoutubeSettings.generic.header.buttons.inject.id,\n\t\t);\n\t\tif (!buttons_container || !injection_spot) return;\n\t\tconst injection_check = injection_spot.querySelector(\"toggle-component\");\n\t\tif (injection_check) return;\n\t\tconst toggle_div = await ChromeExtension.generateToggleDiv();\n\t\tinjection_spot.appendChild(toggle_div.elementRef);\n\t\tawait this.injectSeralizerButton();\n\t}\n\n\tasync injectSeralizerButton() {\n\t\tconst header = document.getElementsByTagName(\n\t\t\tYoutubeSettings.generic.header.container.tag,\n\t\t)[0];\n\t\tif (!header) return;\n\t\tconst buttons_container = header.querySelector(\n\t\t\t\"#\" + YoutubeSettings.generic.header.buttons.id,\n\t\t);\n\t\tconst injection_spot = header.querySelector(\n\t\t\t\"#\" + YoutubeSettings.generic.header.buttons.inject.id,\n\t\t);\n\t\tif (!buttons_container || !injection_spot) return;\n\t\tconst injection_check = injection_spot.querySelector(\"sync-page\");\n\t\tif (injection_check) return;\n\t\tconst serializer_div = await ChromeExtension.generateSerializerDiv();\n\t\tinjection_spot.appendChild(serializer_div.elementRef);\n\t}\n\n\tasync getChannelNameFromChannelPage(): Promise<string | undefined> {\n\t\tif (ChromeExtension.page_instance.page !== \"channel\") {\n\t\t\treturn;\n\t\t}\n\t\tconst channel_container = document.getElementsByTagName(\n\t\t\tYoutubeSettings.channel.channel.container,\n\t\t)[0];\n\t\tif (!channel_container) {\n\t\t\tconsole.log(\"[channel] No channel container\");\n\t\t\treturn;\n\t\t}\n\t\tconst channel_tag = channel_container.querySelector(\n\t\t\tYoutubeSettings.channel.channel.tag,\n\t\t) as HTMLElement;\n\t\tif (!channel_tag) {\n\t\t\tconsole.log(\"[channel] No channel tag\");\n\t\t\treturn;\n\t\t}\n\t\tconst channel_name = channel_tag.innerText;\n\n\t\treturn channel_name;\n\t}\n\n\tstatic async refreshChannels() {\n\t\tChromeExtension.allowed_channels.set([]);\n\t\tMessageHandler.send({ type: \"get-channels\" }, (response) => {\n\t\t\tif (response.type === \"query-channels\") {\n\t\t\t\tconsole.log(\"[serializer] Refreshing channels\");\n\t\t\t\tChromeExtension.allowed_channels.set(response.channels);\n\t\t\t}\n\t\t});\n\t}\n\n\tasync refreshChannelInjection(div: HTMLChannelElement, channel_name: string) {\n\t\tif (!div) {\n\t\t\treturn;\n\t\t}\n\t\tif (!div.dataset) {\n\t\t\tdiv.dataset = { channel: channel_name };\n\t\t}\n\t\tif (div.dataset?.channel !== channel_name) {\n\t\t\tconsole.warn(\n\t\t\t\t\"[channel] Channel name mismatch (expected: %s, got: %s)\",\n\t\t\t\tdiv.dataset?.channel,\n\t\t\t\tchannel_name,\n\t\t\t);\n\t\t\tdiv.dataset.channel = channel_name;\n\t\t}\n\t\tif (ChromeExtension.allowed_channels()?.includes(channel_name)) {\n\t\t\tdiv.innerHTML = `<h2>Blacklist Channel</h2>`;\n\t\t} else {\n\t\t\tdiv.innerHTML = `<h2>Whitelist Channel</h2>`;\n\t\t}\n\t}\n\n\tasync injectChannel() {\n\t\tif (ChromeExtension.page_instance.page !== \"channel\") return;\n\n\t\tconst injection_check = document.querySelectorAll(\"#wt-add\");\n\t\tconst channel_name = (await this.getChannelNameFromChannelPage()) ?? \"\";\n\n\t\tif (injection_check.length > 0) {\n\t\t\tif (injection_check.length >= 2) {\n\t\t\t\tconsole.warn(\n\t\t\t\t\t\"[channel] Too many Channel Injections, deleting all but one\",\n\t\t\t\t);\n\t\t\t\tfor (let i = 1; i < injection_check.length; i++) {\n\t\t\t\t\tinjection_check[i].remove();\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (!injection_check[0]) return;\n\t\t\tawait this.refreshChannelInjection(\n\t\t\t\tinjection_check[0] as HTMLChannelElement,\n\t\t\t\tchannel_name ?? \"\",\n\t\t\t);\n\t\t\treturn;\n\t\t}\n\n\t\tconst container = await PageHandler.WaitForElement(() =>\n\t\t\tdocument.querySelector(`#` + YoutubeSettings.channel.inject.container.id),\n\t\t);\n\t\tconst injection_spot = container.querySelector(\n\t\t\t\"#\" + YoutubeSettings.channel.inject.injection_spot.id,\n\t\t);\n\n\t\tif (!injection_spot) {\n\t\t\tconsole.log(\"[channel] No injection spot\");\n\t\t\treturn;\n\t\t}\n\n\t\tif (!channel_name) {\n\t\t\treturn;\n\t\t}\n\n\t\t//const div = await ChromeExtension.generateAddDiv(channel_name);\n\t\t//injection_spot.appendChild(div);\n\t}\n\n\tasync deleteShorts() {\n\t\tconsole.log(\"[inject] Deleting Shorts...\");\n\t\tconst _deleteShorts = () => {\n\t\t\tconst shorts = document.getElementsByTagName(\n\t\t\t\tYoutubeSettings.home.shorts.tag,\n\t\t\t);\n\t\t\tfor (let i = 0; i < shorts.length; i++) {\n\t\t\t\tconst short = shorts[i] as HTMLElement;\n\t\t\t\tshort.style.display = \"none\";\n\t\t\t}\n\t\t};\n\t\tChromeExtension.page_instance.onVideoRefresh = _deleteShorts;\n\t}\n\n\t/**\n\t* @description Searches the current page for any video elements adds them into the array \n\t\t @returns Nothing(void)\n\t*/\n\tasync search() {\n\t\tconsole.log(\"[inject] Starting Search Routine...\");\n\t\tif (this.searching) return;\n\t\tthis.searching = true;\n\n\t\tconst _grabVideos = async () => {\n\t\t\tconst getContainers = () => {\n\t\t\t\tswitch (ChromeExtension.currentPage) {\n\t\t\t\t\tcase \"channel\":\n\t\t\t\t\tcase \"home\":\n\t\t\t\t\t\treturn document.getElementsByTagName(\n\t\t\t\t\t\t\tYoutubeSettings.home.container,\n\t\t\t\t\t\t);\n\t\t\t\t\tcase \"video\":\n\t\t\t\t\t\treturn document.getElementsByTagName(\n\t\t\t\t\t\t\tYoutubeSettings.video.container,\n\t\t\t\t\t\t);\n\t\t\t\t\tdefault:\n\t\t\t\t\t\treturn document.getElementsByTagName(\n\t\t\t\t\t\t\tYoutubeSettings.home.container,\n\t\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t};\n\n\t\t\tlet containers = getContainers();\n\t\t\tfor (let i = 0; i < containers.length; i++) {\n\t\t\t\tlet videos;\n\t\t\t\tswitch (ChromeExtension.currentPage) {\n\t\t\t\t\tcase \"channel\":\n\t\t\t\t\tcase \"home\":\n\t\t\t\t\t\tvideos = containers[i].getElementsByTagName(\n\t\t\t\t\t\t\tYoutubeSettings.home.yt_video,\n\t\t\t\t\t\t);\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase \"video\":\n\t\t\t\t\t\tvideos = containers[i].getElementsByTagName(\n\t\t\t\t\t\t\tYoutubeSettings.video.yt_video,\n\t\t\t\t\t\t);\n\t\t\t\t\t\tconst circles = containers[i].getElementsByTagName(\n\t\t\t\t\t\t\tYoutubeSettings.video.yt_circle,\n\t\t\t\t\t\t);\n\t\t\t\t\t\tfor (let i = 0; i < circles.length; i++) {\n\t\t\t\t\t\t\tconst circle = circles[i] as HTMLElement;\n\t\t\t\t\t\t\tcircle.style.opacity = \"0\";\n\t\t\t\t\t\t}\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tdefault:\n\t\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tfor (let z = 0; z < videos.length; z++) {\n\t\t\t\t\tconst video_dom = videos[z] as HTMLElement;\n\t\t\t\t\tconst videof_obj = VideoFactory.createVideo(video_dom);\n\t\t\t\t\tconst _channel = this.channels.addChannel(\n\t\t\t\t\t\tnew Channel(\n\t\t\t\t\t\t\tvideof_obj.channelname.name,\n\t\t\t\t\t\t\tvideof_obj.channelname.name,\n\t\t\t\t\t\t),\n\t\t\t\t\t);\n\t\t\t\t\tif (_channel) _channel.addVideo(videof_obj.video);\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\n\t\tChromeExtension.page_instance.onVideoRefresh = _grabVideos;\n\t}\n\n\tasync disableVideos() {\n\t\tlet banned_channels = this.channels.channels.filter(\n\t\t\t(channel) => !ChromeExtension.allowed_channels()?.includes(channel.name),\n\t\t);\n\t\tbanned_channels.forEach(async (channel) => {\n\t\t\tif (channel.disabledState === false) {\n\t\t\t\tconsole.log(`[inject] Disabling channel: ${channel.name}`);\n\t\t\t\tchannel.disable();\n\t\t\t}\n\t\t});\n\t}\n\n\tasync enableVideos() {\n\t\tlet allowed_channels = this.channels.channels.filter((channel) =>\n\t\t\tChromeExtension.allowed_channels()?.includes(channel.name),\n\t\t);\n\t\tallowed_channels.forEach((channel) => channel.enable());\n\t}\n\n\tstartVideoDisableLoop() {\n\t\tconsole.log(\"[inject] Starting Video Disable Routine...\");\n\t\tChromeExtension.page_instance.onVideoRefresh = async () => {\n\t\t\tthis.disableVideos.bind(this)();\n\t\t};\n\t\tChromeExtension.allowed_channels.effect(() => {\n\t\t\tthis.disableVideos.bind(this)();\n\t\t\tthis.enableVideos.bind(this)();\n\t\t});\n\t}\n\n\tclearCache() {\n\t\tthis.channels.clearCache();\n\t}\n\n\trefreshCache() { }\n\n\tstatic addAllowedChannel(channel_name: string, callback?: () => void) {\n\t\tif (!ChromeExtension.allowed_channels()?.includes(channel_name)) {\n\t\t\tChromeExtension.allowed_channels?.set([\n\t\t\t\t...(ChromeExtension.allowed_channels() ?? []),\n\t\t\t\tchannel_name,\n\t\t\t]);\n\t\t\tMessageHandler.addChannel(channel_name, callback);\n\t\t}\n\t}\n\n\tstatic removeAllowedChannel(channel_name: string, callback?: () => void) {\n\t\tif (ChromeExtension.allowed_channels()?.includes(channel_name)) {\n\t\t\tChromeExtension.allowed_channels.set(\n\t\t\t\tChromeExtension.allowed_channels()?.filter(\n\t\t\t\t\t(name) => name !== channel_name,\n\t\t\t\t) ?? [],\n\t\t\t);\n\n\t\t\tMessageHandler.removeChannel(channel_name, callback);\n\t\t}\n\t}\n}\n\n//used by the background script\nasync function inject(..._: any[]) {\n\tconst ce = new ChromeExtension([]);\n\n\tconsole.log(\"[injector] Injecting...\");\n\tChromeExtension.page_instance.onVideoRefresh = () => {\n\t\tce.injectHeader();\n\t\tce.injectChannel();\n\t\tce.channels.channels.forEach((channel) => {\n\t\t\tchannel.refresh();\n\t\t});\n\t};\n\n\tce.search();\n\tce.startVideoDisableLoop();\n\tce.deleteShorts();\n\n\t//run chrome listener on update, and check the page\n\t//@ts-ignore\n\tBrowser.browser.runtime.onMessage.addListener(\n\t\t(request, _sender, _sendResponse) => {\n\t\t\tif (request.type === \"update\") {\n\t\t\t\tChromeExtension.page_instance.refreshPage((page, updated) => {\n\t\t\t\t\tif (page === \"channel\" && updated) {\n\t\t\t\t\t\tChromeExtension.page_instance.WaitUntilHeaderLoaded(() => {\n\t\t\t\t\t\t\tce.injectChannel();\n\t\t\t\t\t\t\tce.injectHeader();\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t\tce.clearCache();\n\t\t\t} else if (request.type === \"update-channels\") {\n\t\t\t\tconsole.log(\"[injector] Updating Channels\");\n\t\t\t\tce.refreshCache();\n\t\t\t}\n\t\t},\n\t);\n\n\treturn true;\n}\n\ninject();\n"],
  "mappings": "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",
  "names": ["_a", "_a", "i", "_a", "TEMPLATE", "_a", "_a", "i"]
}
