{
  "version": 3,
  "sources": ["../../src/constants/settings.ts", "../../src/factory/videofactory.ts", "../../src/framework/tagger.ts", "../../src/interfaces/browser.ts", "../../src/handler/messagehandler.ts", "../../src/error/timeout.ts", "../../src/util/sleep.ts", "../../src/object/abstract/identifiable.ts", "../../src/handler/pagehandler.ts", "../../src/object/channel.ts", "../../src/index.ts", "../../src/object/video.ts"],
  "sourcesContent": ["export const SleepSettings = {\n\twaiting: 250,\n\tengine: 600,\n\tmax_attempts: 50,\n};\n\nexport const YoutubeSettings = {\n\thome: {\n\t\tcontainer: \"ytd-rich-grid-renderer\",\n\t\tyt_video: \"ytd-rich-item-renderer\",\n\t\tyt_video_title: {\n\t\t\ttag: \"a\",\n\t\t\tid: \"video-title-link\"\n\t\t},\n\t\tshorts: {\n\t\t\ttag: \"ytd-rich-section-renderer\",\n\t\t\tclass: \"style-scope ytd-rich-grid-renderer\"\n\t\t}\n\t},\n\tvideo: {\n\t\tcontainer: \"ytd-watch-next-secondary-results-renderer\",\n\t\tyt_video: \"ytd-compact-video-renderer\",\n\t\tyt_circle: \"ytd-continuation-item-renderer\",\n\t\tyt_video_link: {\n\t\t\ttag: \"a\",\n\t\t\tclass: \"yt-simple-endpoint style-scope ytd-compact-video-renderer\"\n\t\t},\n\t\tyt_video_title: {\n\t\t\ttag: \"span\",\n\t\t\tid: \"video-title\"\n\t\t},\n\t\tchannel: {\n\t\t\tcontainer: \"ytd-channel-name\",\n\t\t\ttag: \"yt-formatted-string\",\n\t\t\tid: \"channel-name\",\n\t\t\tlink: {\n\t\t\t\tcontainer: \"dismissible\",\n\t\t\t\ttag: \"a\",\n\t\t\t\tclass: \"yt-simple-endpoint style-scope ytd-compact-video-renderer\"\n\t\t\t}\n\t\t}\n\t},\n\tchannel: {\n\t\tchannel: {\n\t\t\tcontainer: \"ytd-channel-name\",\n\t\t\ttag: \"yt-formatted-string\",\n\t\t},\n\t\tinject: {\n\t\t\tcontainer: {\n\t\t\t\ttag: \"div\",\n\t\t\t\tid: \"inner-header-container\"\n\t\t\t},\n\t\t\tinjection_spot: {\n\t\t\t\ttag: \"div\",\n\t\t\t\tid: \"buttons\",\n\t\t\t\tinject_id: \"wt-add\"\n\t\t\t}\n\t\t}\n\t},\n\tgeneric: {\n\t\theader: {\n\t\t\tcontainer: {\n\t\t\t\ttag: \"ytd-masthead\",\n\t\t\t\tid: \"masthead\"\n\t\t\t},\n\t\t\tbuttons: {\n\t\t\t\ttag: \"div\",\n\t\t\t\tid: \"end\",\n\t\t\t\tinject: {\n\t\t\t\t\tid: \"buttons\"\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\tyt_video: {\n\t\t\tchannel: {\n\t\t\t\ttag: \"ytd-channel-name\",\n\t\t\t\tid: { tag: \"a\" }\n\t\t\t},\n\t\t\ttitle: {\n\t\t\t\ttag: \"a\",\n\t\t\t\tid: \"video-title-link\"\n\t\t\t}\n\t\t}\n\t}\n}\n", "import { ChromeExtension } from \"..\";\nimport { YoutubeSettings } from \"../constants/settings\";\nimport { Video } from \"../object/video\";\n\nexport class VideoFactory {\n\tstatic createVideo(video_dom: HTMLElement) {\n\n\t\tfunction extractVideoId(url: string) {\n\t\t\tvar match = url.match(/(?:youtube\\.com\\/(?:[^\\/]+\\/.+\\/|(?:v|e(?:mbed)?)\\/|.*[?&]v=)|youtu\\.be\\/)([^\"&?\\/\\s]{11})/);\n\t\t\treturn match && match[1];\n\t\t}\n\n\t\tfunction getTitleAndID() {\n\t\t\tconst is_home = ChromeExtension.page_instance.page === \"home\";\n\t\t\tlet anchor_tags: HTMLCollectionOf<Element>;\n\t\t\tif (is_home) {\n\t\t\t\tanchor_tags = video_dom.getElementsByTagName(YoutubeSettings.home.yt_video_title.tag);\n\t\t\t} else {\n\t\t\t\tanchor_tags = video_dom.getElementsByTagName(YoutubeSettings.video.yt_video_title.tag);\n\t\t\t}\n\n\t\t\tfor (let i = 0; i < anchor_tags.length; i++) {\n\t\t\t\tconst anchor = anchor_tags[i] as HTMLAnchorElement;\n\t\t\t\tif (is_home) {\n\t\t\t\t\tif (anchor.id === YoutubeSettings.home.yt_video_title.id) {\n\t\t\t\t\t\treturn { title: anchor.innerText, id: extractVideoId(anchor.href) };\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tif (anchor.id === YoutubeSettings.video.yt_video_title.id) {\n\t\t\t\t\t\tconst href_dom = video_dom.getElementsByTagName(YoutubeSettings.video.yt_video_link.tag)[0] as HTMLAnchorElement;\n\t\t\t\t\t\tconst href = href_dom.href;\n\t\t\t\t\t\treturn { title: anchor.innerText, id: extractVideoId(href) };\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn { title: '', id: '' };\n\t\t}\n\n\t\tfunction getChannelName() {\n\t\t\tconst is_home = ChromeExtension.page_instance.page === \"home\";\n\n\t\t\tlet channel_tag: HTMLCollectionOf<Element>;\n\t\t\tif (is_home) {\n\t\t\t\tchannel_tag = video_dom.getElementsByTagName(YoutubeSettings.generic.yt_video.channel.tag);\n\t\t\t} else {\n\t\t\t\tchannel_tag = video_dom.getElementsByTagName(YoutubeSettings.video.channel.tag);\n\t\t\t}\n\t\t\tfor (let i = 0; i < channel_tag.length; i++) {\n\t\t\t\tlet search: HTMLAnchorElement | { innerText: string, href: string } | null = null;\n\t\t\t\tif (is_home)\n\t\t\t\t\tsearch = channel_tag[i].getElementsByTagName(YoutubeSettings.generic.yt_video.channel.id.tag)[0] as HTMLAnchorElement;\n\t\t\t\telse {\n\t\t\t\t\tconst link_container = video_dom.querySelector(\"#\" + YoutubeSettings.video.channel.link.container);\n\t\t\t\t\tif (!link_container) {\n\t\t\t\t\t\tconsole.error(\"[channel] No link container\");\n\t\t\t\t\t\treturn { name: '', id: '' };\n\t\t\t\t\t}\n\n\t\t\t\t\tlet link_anchor = link_container.getElementsByTagName(YoutubeSettings.video.channel.link.tag);\n\t\t\t\t\tlet link = \"\";\n\t\t\t\t\tfor (let i = 0; i < link_anchor.length; i++) {\n\t\t\t\t\t\tconst link_dom = link_anchor[i] as HTMLAnchorElement;\n\t\t\t\t\t\tif (link_dom.className === YoutubeSettings.video.channel.link.class) {\n\t\t\t\t\t\t\tlink = link_dom.href;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tsearch = { innerText: (channel_tag[i] as HTMLElement)!.title, href: link };\n\t\t\t\t}\n\n\n\t\t\t\tif (search) {\n\t\t\t\t\treturn { name: search.innerText, id: search.href };\n\t\t\t\t}\n\n\t\t\t}\n\t\t\treturn { name: '', id: '' };\n\n\t\t}\n\n\t\treturn { video: new Video(getTitleAndID().id ?? '', getTitleAndID().title, false, video_dom), channelname: getChannelName() };\n\n\t}\n}\n", "console.log('[tagger framework] loaded');\nexport type Tag = keyof HTMLElementTagNameMap;\nexport type Attribute = { [key: string]: any };\n\n\nexport type State<T> = {\n\tstate: DispatchWithResult<void, T>;\n\tsetState: Dispatch<T>;\n}\n\nexport class Updater {\n\tprivate static instance: Updater;\n\tprivate events: Dispatch[] = [];\n\n\tprivate constructor() { }\n\tstatic getInstance() {\n\t\tif (!Updater.instance) {\n\t\t\tUpdater.instance = new Updater();\n\t\t}\n\t\treturn Updater.instance;\n\t}\n\n\tpublic registerEvent(event: Dispatch) {\n\t\tthis.events.push(event);\n\t}\n\n\tpublic update() {\n\t\tthis.events.forEach((event) => {\n\t\t\tevent();\n\t\t});\n\t}\n}\n\nexport function createState<T>(initialState: T): State<T> {\n\tlet state = initialState;\n\tconst setState = (newState: T) => {\n\t\tstate = newState;\n\t\tUpdater.getInstance().update();\n\t};\n\treturn { state: () => state, setState };\n}\n\n\nexport function flattenString(arr: string[]): string {\n\treturn arr.join(' ');\n}\n\nexport function tag(tag: Tag, attr: Attribute = {}, ...children: HTMLElement[]) {\n\tconst element = document.createElement(tag);\n\n\tif (attr) {\n\t\tObject.keys(attr).forEach((key) => {\n\t\t\telement.setAttribute(key, attr[key]);\n\t\t});\n\t\telement.classList.add('tag');\n\t}\n\n\tif (children) {\n\t\tchildren.forEach((child) => {\n\t\t\telement.appendChild(child);\n\t\t});\n\t}\n\n\treturn element;\n}\n\nexport function th2(text: string, attr: Attribute = {}) {\n\treturn tag('h2', { ...attr }, document.createTextNode(text) as any);\n}\n\nexport function tdiv(attr: Attribute = {}, ...children: HTMLElement[]) {\n\treturn tag('div', attr, ...children);\n}\n\ntype InputElementProps = \"text\" | \"password\" | \"checkbox\" | \"radio\" | \"submit\" | \"reset\" | \"file\" | \"hidden\" | \"image\" | \"button\";\n\n\nexport function tinput(props: InputElementProps, placeHolder: string = \"\", defaultValue: string = \"\", onValueChange?: Dispatch<string>, className: string = \"\", attr: Attribute = {}) {\n\tconst state: State<string> = createState(defaultValue);\n\tconst input = tag('input', { type: props, placeholder: placeHolder, class: className, ...attr }) as HTMLInputElement;\n\tinput.value = defaultValue;\n\tinput.addEventListener(\"input\", (_: Event) => {\n\t\tonValueChange && onValueChange(state.state());\n\t\tstate.setState(input.value);\n\t})\n\tfunction update() {\n\t\tinput.value = state.state();\n\t}\n\tUpdater.getInstance().registerEvent(update);\n\treturn { input, state };\n}\n\nexport function tbutton(onclick: Dispatch, text: string, className: string = \"\", attr: Attribute = {}, ...children: HTMLElement[]) {\n\tconst button = tag('button', { class: className, ...attr }, ...children);\n\tbutton.appendChild(document.createTextNode(text));\n\tbutton.onclick = (e) => {\n\t\te.preventDefault();\n\t\tonclick();\n\t}\n\treturn button;\n}\n\nexport type FlexElementProps = \"column\" | \"row\" | \"align-center\" | \"align-start\" | \"align-end\" | \"justify-center\" | \"justify-start\" | \"justify-end\" | \"justify-between\" | \"justify-around\" | \"wrap\";\nexport function tflex(props: FlexElementProps[] = [], className: string = \"\", attr: Attribute = {}, ...children: HTMLElement[]) {\n\treturn tag('div', { class: `flex ${flattenString(props)} ${className}`, ...attr }, ...children);\n}\n\nexport type Dispatch<T = any> = ((...value: T[]) => void);\nexport type DispatchWithResult<A = any, R = any> = ((...value: A[]) => R);\n\nexport function t_toggle_page(className: string = \"\", attr: Attribute = {}, ...children: HTMLElement[]): { element: HTMLElement, toggle: Dispatch } {\n\n\tconst container = tdiv({ class: `toggle-page ${className}`, ...attr }, ...children);\n\tcontainer.onclick = (e: MouseEvent) => {\n\t\t//absorb click from parent\n\t\te.stopPropagation();\n\t}\n\n\tfunction toggle() {\n\t\tif (container.classList.contains('open')) {\n\t\t\tcontainer.classList.remove('open');\n\t\t\treturn;\n\t\t} else {\n\t\t\tcontainer.classList.add('open');\n\t\t}\n\t}\n\n\treturn { element: container, toggle };\n}\n\n\n", "//static table\nexport type ChromeMessage = {\n\ttype: string;\n\tchannel?: string;\n\tchannels?: string[];\n\tenabled?: boolean;\n}\n\nexport class Browser {\n\tpublic static get isFirefox() {\n\t\treturn navigator.userAgent.toLowerCase().indexOf(\"firefox\") > -1;\n\t}\n\tpublic static get browser(): any | undefined {\n\t\t// @ts-ignore\n\t\tif (chrome) {\n\t\t\t// @ts-ignore\n\t\t\treturn chrome;\n\t\t} else {\n\t\t\t// @ts-ignore\n\t\t\treturn browser;\n\t\t}\n\t}\n}\n", "import { Dispatch } from \"../framework/tagger\";\nimport { Browser, ChromeMessage } from \"../interfaces/browser\";\n\n//communicate with service workers\nexport class MessageHandler {\n\tstatic send(message: ChromeMessage, callback?: Dispatch) {\n\t\tBrowser.browser.runtime.sendMessage(message, (response: any) => {\n\t\t\tvar lastError = Browser.browser.runtime.lastError;\n\t\t\tif (lastError) {\n\t\t\t\tconsole.error(\"[MessageHandler] Error: %s\", lastError.message);\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tif (callback)\n\t\t\t\tcallback(response);\n\t\t});\n\t}\n\n\tstatic addChannel(channel: string) {\n\t\tthis.send({ type: \"add-channel\", channel: channel });\n\t}\n\n\tstatic removeChannel(channel: string) {\n\t\tthis.send({ type: \"remove-channel\", channel: channel });\n\t}\n\n\tstatic onMessage(callback: Function) {\n\t\tBrowser.browser.runtime.onMessage.addListener(() => callback());\n\t}\n\n}\n", "export class TimeoutError extends Error {\n\tconstructor(message: string) {\n\t\tsuper(message);\n\t\tthis.name = \"TimeoutError\";\n\t}\n}\n", "import { Dispatch } from \"../framework/tagger\";\n\nexport async function sleep(callback: Dispatch, timeout: number) {\n\treturn new Promise((resolve, _reject) => {\n\t\tsetTimeout(() => {\n\t\t\tresolve(callback());\n\t\t}, timeout);\n\t});\n}\n", "export class Identifiable {\n\tuuid = \"\";\n\tid = \"\";\n\tname = \"\";\n\n\tconstructor(id: string, name: string) {\n\t\tthis.uuid = Identifiable.generateUUID();\n\t\tthis.id = id;\n\t\tthis.name = name;\n\t}\n\n\tstatic generateUUID() {\n\t\tconst uuid = \"xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx\".replace(/[xy]/g, function(c) {\n\t\t\treturn (c === \"x\" ? (Math.random() * 16 | 0) : (Math.random() * 16 | 0) & 0x3 | 0x8).toString(16);\n\t\t});\n\t\treturn uuid;\n\t}\n\n\tcompare(other: Identifiable) {\n\t\treturn this.id === other.id;\n\t}\n\n\tcompareUUID(other: Identifiable) {\n\t\treturn this.uuid === other.uuid;\n\t}\n\n}\n", "import { Dispatch } from \"framework/tagger\";\nimport { ChromeExtension } from \"..\";\nimport { SleepSettings, YoutubeSettings } from \"../constants/settings\";\nimport { TimeoutError } from \"../error/timeout\";\nimport { EngineInstance } from \"../interfaces/engine\";\nimport { Pages } from \"../interfaces/pages\";\nimport { sleep } from \"../util/sleep\";\nimport { Identifiable } from \"object/abstract/identifiable\";\nimport { Browser } from \"interfaces/browser\";\n\nexport class PageHandler {\n\tinit = false;\n\tpage_loaded = false;\n\tstatic engine_running = false;\n\tpage: Pages = \"home\";\n\tengine_instance: EngineInstance[] = [];\n\t_onVideoRefresh: Dispatch[] = [];\n\t_onPageLoad: Dispatch[] = [];\n\n\n\tconstructor() {\n\n\t}\n\n\tasync start() {\n\t\tthis.getPage().then((page: Pages) => {\n\t\t\tthis.page = page;\n\t\t\tconsole.log(\"Page: \", this.page);\n\t\t\tthis.pageLoaded();\n\t\t});\n\t}\n\n\tstatic craft_engine_instance(instance: string, page: Pages): EngineInstance {\n\t\treturn {\n\t\t\tengine: instance,\n\t\t\tpage: page\n\t\t};\n\t}\n\n\tisPageLoading() {\n\t\treturn !this.page_loaded;\n\t}\n\n\tisVideoOnPage() {\n\t\t//check where we are\n\t\tlet video: HTMLCollectionOf<Element>;\n\t\tif (this.page === \"home\")\n\t\t\tvideo = document.getElementsByTagName(YoutubeSettings.home.yt_video);\n\t\telse\n\t\t\tvideo = document.getElementsByTagName(YoutubeSettings.video.yt_video);\n\t\treturn video.length > 0;\n\t}\n\n\trefreshPage(callback = (_page: Pages, _update: boolean) => { }) {\n\t\tthis.getPage().then((page) => {\n\t\t\tlet update = false;\n\t\t\tif (this.page !== page) {\n\t\t\t\tupdate = true;\n\t\t\t\tPageHandler.engine_running = false;\n\t\t\t\tthis.page_loaded = false;\n\t\t\t\tthis.page = page;\n\t\t\t\tthis.pageLoaded();\n\t\t\t}\n\t\t\tcallback(page, update);\n\t\t});\n\t}\n\n\tstatic async WaitForElement(div_function: () => any, indefinite = false) {\n\t\tlet div = div_function();\n\t\tlet attempts = 0;\n\n\t\twhile (!div) {\n\t\t\tif (attempts >= SleepSettings.max_attempts && !indefinite) {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tawait sleep(() => { attempts++ }, SleepSettings.waiting);\n\t\t\tdiv = div_function();\n\t\t}\n\t\tif (attempts >= SleepSettings.max_attempts) {\n\t\t\tconsole.error(\"[WT] Can't find element, I'm giving up...\")\n\t\t\tthrow new TimeoutError(\"Can't find element\");\n\t\t} else\n\t\t\treturn div;\n\t}\n\n\tasync WaitUntilHeaderLoaded(callback = () => { }) {\n\n\t\ttry {\n\t\t\tlet header_container = await PageHandler.WaitForElement(() => document.getElementsByTagName(YoutubeSettings.generic.header.container.tag)[0]);\n\n\t\t\tawait PageHandler.WaitForElement(() => header_container.querySelector(\"#\" + YoutubeSettings.generic.header.buttons.id));\n\n\t\t\tcallback();\n\n\t\t} catch (e: any) {\n\t\t\tconsole.error(\"[inject::header], %s\", e.message);\n\t\t\treturn;\n\t\t}\n\n\t}\n\n\tasync engine() {\n\t\tconst loop_id = Identifiable.generateUUID();\n\t\tconst page = this.page;\n\t\tif (PageHandler.engine_running) {\n\t\t\tconsole.log(\"[%s] Engine already running (%s)\", page, loop_id);\n\t\t\treturn;\n\t\t} else {\n\t\t\tconsole.log(\"[%s] Engine not running (%s)\", page, loop_id);\n\t\t}\n\t\tPageHandler.engine_running = true;\n\t\tthis.engine_instance.push(PageHandler.craft_engine_instance(loop_id, page));\n\t\tconsole.log(\"[%s] Engine started (%s)\", page, loop_id);\n\t\twhile (this.page_loaded) {\n\t\t\tif (this.page != page) break;\n\n\t\t\tlet another_instance = false;\n\t\t\tthis.engine_instance.forEach((instance) => {\n\t\t\t\tif (instance.engine != loop_id && instance.page == page) another_instance = true;\n\t\t\t});\n\t\t\tif (another_instance) break;\n\n\t\t\tthis._onVideoRefresh.forEach(async (callback: Dispatch) => {\n\t\t\t\tif (this.page != page) return;\n\t\t\t\tcallback();\n\t\t\t});\n\t\t\tawait sleep(() => { }, SleepSettings.engine);\n\t\t}\n\t\tthis.engine_instance = this.engine_instance.filter(instance => instance.engine != loop_id);\n\t\tconsole.log(\"[%s]Engine stopped (%s)\", page, loop_id);\n\t}\n\n\tasync pageLoaded() {\n\n\t\tif (ChromeExtension.currentPage == \"channel\") {\n\t\t\tawait PageHandler.WaitForElement(() => document.querySelector(YoutubeSettings.channel.channel.tag), true);\n\t\t} else {\n\t\t\tawait PageHandler.WaitForElement(() => this.isVideoOnPage(), true);\n\t\t}\n\t\tthis.page_loaded = true;\n\t\tthis._onPageLoad.forEach(callback => {\n\t\t\tcallback();\n\t\t});\n\t\tthis.engine.bind(this)();\n\t}\n\n\tasync getPage(): Promise<Pages> {\n\t\treturn new Promise((resolve, _reject) => {\n\t\t\t//@ts-ignore\n\t\t\tBrowser.browser.runtime.sendMessage({ type: \"get-page\" }, (response) => {\n\t\t\t\tresolve(response.page as Pages);\n\t\t\t});\n\t\t});\n\t}\n\n\n\t/**\n\t * @param {Function} callback The callback to be called when a video is refreshed\n\t */\n\tset onVideoRefresh(callback: Dispatch) {\n\t\tthis._onVideoRefresh.push(callback);\n\t}\n\n\t/**\n\t * @param {Function} callback The callback to be called when the page is loaded\n\t */\n\tset onPageLoad(callback: Dispatch) {\n\t\tthis._onPageLoad.push(callback);\n\t}\n\n}\n\n\n", "import { Identifiable } from \"./abstract/identifiable\";\nimport { Video } from \"./video\";\n\nexport class Channel extends Identifiable {\n\tvideos: Video[] = [];\n\n\tconstructor(id: string, name: string) {\n\t\tsuper(id, name);\n\t}\n\n\tdoesVideoExist(video: Video) {\n\t\tif (video instanceof Video) {\n\t\t\tconst first_search = this.videos.find(v => v.compare(video));\n\t\t\tif (first_search) return first_search;\n\t\t}\n\t\treturn false;\n\t}\n\n\taddVideo(video: Video) {\n\t\tif (video instanceof Video) {\n\t\t\tconst _video = this.doesVideoExist(video);\n\t\t\tif (_video) {\n\t\t\t\tthis.removeVideo(_video);\n\t\t\t}\n\t\t\tvideo.inject(this);\n\t\t\tthis.videos.push(video);\n\t\t\treturn video;\n\t\t}\n\t\telse return false;\n\t}\n\n\t//remove video?\n\tremoveVideo(video: Video) {\n\t\tif (video instanceof Video) {\n\t\t\tthis.videos = this.videos.filter(v => !v.compare(video));\n\t\t}\n\t}\n\n\tenable() {\n\t\tthis.videos.forEach(video => video.enable());\n\t}\n\n\tdisable() {\n\t\tthis.videos.forEach(video => video.disable());\n\t}\n\n\trefresh() {\n\t\tthis.videos.forEach(video => video.refresh());\n\t}\n\n}\n\n\n", "import { VideoFactory } from 'factory/videofactory';\nimport { YoutubeSettings } from './constants/settings';\nimport { t_toggle_page, tbutton, tdiv, tflex, th2, tinput } from './framework/tagger';\nimport { MessageHandler } from './handler/messagehandler';\nimport { PageHandler } from './handler/pagehandler';\nimport { Channel } from './object/channel';\nimport './styles/styles.scss';\nimport './styles/tagger.scss';\n//check if page is still loading\n\nclass ChannelCache {\n\tchannels: Channel[] = []; //Channel\n\n\tconstructor() {\n\t}\n\n\n\tdoesChannelExist(channel: Channel) {\n\t\tif (channel instanceof Channel) {\n\t\t\treturn this.channels.find(c => c.compare(channel));\n\t\t}\n\t\treturn false;\n\t}\n\n\t//methods\n\taddChannel(channel: Channel) {\n\t\tif (channel instanceof Channel) {\n\t\t\tconst _channel = this.doesChannelExist(channel);\n\t\t\tif (!this.doesChannelExist(channel)) {\n\t\t\t\tthis.channels.push(channel);\n\t\t\t\treturn channel;\n\t\t\t} else {\n\t\t\t\treturn _channel;\n\t\t\t}\n\t\t}\n\t}\n\n\tdisableVideos() {\n\t\tthis.channels.forEach(channel => {\n\t\t\tchannel.disable();\n\t\t});\n\t}\n\n\tenableVideos() {\n\t\tthis.channels.forEach(channel => {\n\t\t\tchannel.enable();\n\t\t});\n\t}\n\n\tclearCache() {\n\t\tthis.channels = [];\n\t}\n}\n\nclass Serializer {\n\n\tstatic importChannels(channels: string) {\n\t\ttry {\n\t\t\tconst json_parsed = JSON.parse(channels) as string[];\n\t\t\tif (Array.isArray(json_parsed)) {\n\t\t\t\treturn json_parsed;\n\t\t\t}\n\t\t\tthrow new Error(`Invalid JSON : (${channels})`);\n\t\t} catch (e) {\n\t\t\tconsole.error(\"[serializer::import] Error: %s (obj: %s)\", e, channels);\n\t\t\treturn undefined;\n\t\t}\n\t}\n\n\tstatic exportChannels(channels: string[]) {\n\t\ttry {\n\t\t\tconst json_channels = JSON.stringify(channels);\n\t\t\treturn (json_channels);\n\t\t} catch (e) {\n\t\t\tconsole.error(\"[serializer::export] Error: %s\", e);\n\t\t\treturn undefined;\n\t\t}\n\t}\n\n}\n\ninterface HTMLChannelElement extends HTMLElement {\n\tdataset: {\n\t\tchannel: string;\n\t}\n}\n\nexport class ChromeExtension {\n\tchannels = new ChannelCache();\n\tstatic allowed_channels: string[] = []; //string\n\tstatic page_instance = new PageHandler();\n\tstatic enabled: boolean = true;\n\tsearching = false;\n\tstarted = false;\n\n\tconstructor(allowed_channels: string[]) {\n\t\tChromeExtension.allowed_channels = allowed_channels;\n\t\tChromeExtension.page_instance.start();\n\t\tthis.start();\n\t}\n\n\n\tstatic get currentPage() {\n\t\treturn ChromeExtension.page_instance.page;\n\t}\n\n\t//methods\n\n\tstatic async getEnabled(): Promise<boolean> {\n\t\treturn new Promise((resolve, _) => {\n\t\t\tMessageHandler.send({ type: \"get-enabled\" }, (response: any) => {\n\t\t\t\tresolve(response.enabled);\n\t\t\t});\n\t\t});\n\t}\n\n\tstatic setEnabled(enabled: boolean) {\n\t\tMessageHandler.send({ type: \"set-enabled\", enabled: enabled });\n\t}\n\n\tasync start() {\n\t\tMessageHandler.send({ type: \"get-channels\" }, (response) => {\n\t\t\tif (response.type === \"query-channels\") {\n\t\t\t\tChromeExtension.allowed_channels = response.channels;\n\t\t\t}\n\t\t});\n\t}\n\n\tprivate static async generateTogglePage() {\n\t\tconst channel_input = tinput(\"text\", \"Input Channel JSON Here\", \"\");\n\t\tconst flex = tflex([\"column\", \"wrap\"], \"gap-02\", {},\n\t\t\tth2(\"Channel Serializer\"),\n\t\t\tchannel_input.input,\n\t\t\ttflex([\"column\", \"align-center\"], \"gap-01\", {},\n\t\t\t\ttbutton(() => {\n\t\t\t\t\tconst channels = Serializer.importChannels(channel_input.state.state());\n\t\t\t\t\tif (channels) {\n\t\t\t\t\t\tMessageHandler.send({ type: \"set-channels\", channels: channels }, () => {\n\t\t\t\t\t\t\tChromeExtension.refreshChannels();\n\t\t\t\t\t\t});\n\t\t\t\t\t} else {\n\t\t\t\t\t\talert(\"Invalid JSON/ChannelScript\");\n\t\t\t\t\t}\n\t\t\t\t}, \"Submit\", \"fill-width\")\n\t\t\t),\n\t\t\ttbutton(() => {\n\t\t\t\tconst export_string = Serializer.exportChannels(ChromeExtension.allowed_channels);\n\t\t\t\tconsole.log(\"[serializer] Exporting: %s\", export_string);\n\t\t\t\t//copy to clipboard\n\t\t\t\tnavigator.clipboard.writeText(export_string ?? \"[]\").then(() => {\n\t\t\t\t\tconsole.log(\"[serializer] Copied to clipboard\");\n\t\t\t\t}).catch((err) => {\n\t\t\t\t\tconsole.error(\"[serializer] Error: %s (clipboard failed)\", err);\n\t\t\t\t});\n\n\t\t\t\talert(\"Channels exported to clipboard\");\n\n\t\t\t}, \"Channels to Clipboard\", \"fill-width\"),\n\t\t);\n\t\tconst page = t_toggle_page(\"right-0\", {}, flex);\n\t\treturn page;\n\t}\n\n\tstatic async generateSerializerDiv() {\n\t\tconst small_page = await this.generateTogglePage();\n\t\tconst div = tdiv({ id: \"wt-serializer\" }, small_page.element, th2(\"Export/Import\"));\n\t\tdiv.onclick = () => {\n\t\t\tsmall_page.toggle();\n\t\t}\n\n\t\treturn div;\n\t}\n\n\tstatic async generateToggleDiv() {\n\n\t\tconst div = tdiv({ id: \"wt-toggle\" });\n\n\t\tChromeExtension.enabled = await ChromeExtension.getEnabled();\n\n\t\tif (ChromeExtension.enabled) {\n\t\t\tdiv.innerHTML = `<h2>Enabled</h2>`;\n\t\t\tdiv.classList.add(\"on\");\n\t\t}\n\t\telse {\n\t\t\tdiv.innerHTML = `<h2>Disabled</h2>`;\n\t\t\tdiv.classList.remove(\"on\");\n\t\t}\n\n\t\tdiv.onclick = () => {\n\t\t\tChromeExtension.enabled = !ChromeExtension.enabled;\n\t\t\tChromeExtension.setEnabled(ChromeExtension.enabled);\n\t\t\tif (ChromeExtension.enabled) {\n\t\t\t\tdiv.innerHTML = `<h2>Enabled</h2>`;\n\t\t\t\tdiv.classList.add(\"on\");\n\t\t\t} else {\n\t\t\t\tdiv.innerHTML = `<h2>Disabled</h2>`;\n\t\t\t\tdiv.classList.remove(\"on\");\n\t\t\t}\n\t\t}\n\t\treturn div;\n\t}\n\n\tstatic async generateAddDiv(channel: string) {\n\t\tconst div = tdiv({ id: YoutubeSettings.channel.inject.injection_spot.inject_id, dataset: { channel: channel } });\n\t\tif (ChromeExtension.allowed_channels.includes(channel))\n\t\t\tdiv.innerHTML = `<h2>Blacklist Channel</h2>`;\n\t\telse\n\t\t\tdiv.innerHTML = `<h2>Whitelist Channel</h2>`;\n\t\tdiv.onclick = () => {\n\t\t\tconst channel_name_dataset = div.dataset.channel;\n\t\t\tif (!channel_name_dataset) return;\n\t\t\tif (ChromeExtension.allowed_channels.includes(channel_name_dataset ?? \"\")) {\n\t\t\t\tChromeExtension.removeAllowedChannel(channel_name_dataset ?? \"\");\n\t\t\t\tdiv.innerHTML = `<h2>Whitelist Channel</h2>`;\n\t\t\t} else {\n\t\t\t\tChromeExtension.addAllowedChannel(channel_name_dataset ?? \"\");\n\t\t\t\tdiv.innerHTML = `<h2>Blacklist Channel</h2>`;\n\t\t\t}\n\t\t}\n\t\treturn div;\n\t}\n\n\tasync injectHeader() {\n\t\tconst header = document.getElementsByTagName(YoutubeSettings.generic.header.container.tag)[0];\n\t\tif (!header) return;\n\t\tconst buttons_container = header.querySelector(\"#\" + YoutubeSettings.generic.header.buttons.id);\n\t\tconst injection_spot = header.querySelector(\"#\" + YoutubeSettings.generic.header.buttons.inject.id);\n\t\tif (!buttons_container || !injection_spot) return;\n\t\tconst injection_check = injection_spot.querySelector(\"#wt-toggle\");\n\t\tif (injection_check) return;\n\t\tconst toggle_div = await ChromeExtension.generateToggleDiv();\n\t\tinjection_spot.appendChild(toggle_div);\n\t\tawait this.injectSeralizerButton();\n\t}\n\n\tasync injectSeralizerButton() {\n\t\tconst header = document.getElementsByTagName(YoutubeSettings.generic.header.container.tag)[0];\n\t\tif (!header) return;\n\t\tconst buttons_container = header.querySelector(\"#\" + YoutubeSettings.generic.header.buttons.id);\n\t\tconst injection_spot = header.querySelector(\"#\" + YoutubeSettings.generic.header.buttons.inject.id);\n\t\tif (!buttons_container || !injection_spot) return;\n\t\tconst injection_check = injection_spot.querySelector(\"#wt-serializer\");\n\t\tif (injection_check) return;\n\t\tconst serializer_div = await ChromeExtension.generateSerializerDiv();\n\t\tinjection_spot.appendChild(serializer_div);\n\t}\n\n\tasync getChannelNameFromChannelPage(): Promise<string | undefined> {\n\t\tif (ChromeExtension.page_instance.page !== \"channel\") {\n\t\t\treturn;\n\t\t};\n\t\tconst channel_container = document.getElementsByTagName(YoutubeSettings.channel.channel.container)[0];\n\t\tif (!channel_container) {\n\t\t\tconsole.log(\"[channel] No channel container\");\n\t\t\treturn;\n\t\t};\n\t\tconst channel_tag = channel_container.querySelector(YoutubeSettings.channel.channel.tag) as HTMLElement;\n\t\tif (!channel_tag) {\n\t\t\tconsole.log(\"[channel] No channel tag\");\n\t\t\treturn;\n\t\t};\n\t\tconst channel_name = channel_tag.innerText;\n\n\t\treturn channel_name;\n\t}\n\n\tstatic async refreshChannels() {\n\t\tChromeExtension.allowed_channels = [];\n\t\tMessageHandler.send({ type: \"get-channels\" }, (response) => {\n\t\t\tif (response.type === \"query-channels\") {\n\t\t\t\tconsole.log(\"[serializer] Refreshing channels\");\n\t\t\t\tChromeExtension.allowed_channels = response.channels;\n\t\t\t}\n\t\t});\n\t}\n\n\tasync refreshChannelInjection(div: HTMLChannelElement, channel_name: string) {\n\t\tif (!div) {\n\t\t\treturn;\n\t\t}\n\t\tif (!div.dataset) {\n\t\t\tdiv.dataset = { channel: channel_name };\n\t\t}\n\t\tif (div.dataset?.channel !== channel_name) {\n\t\t\tconsole.warn(\"[channel] Channel name mismatch (expected: %s, got: %s)\", div.dataset?.channel, channel_name);\n\t\t\tdiv.dataset.channel = channel_name;\n\t\t}\n\t\tif (ChromeExtension.allowed_channels.includes(channel_name)) {\n\t\t\tdiv.innerHTML = `<h2>Blacklist Channel</h2>`;\n\t\t}\n\t\telse {\n\t\t\tdiv.innerHTML = `<h2>Whitelist Channel</h2>`;\n\t\t}\n\t}\n\n\tasync injectChannel() {\n\n\t\tif (ChromeExtension.page_instance.page !== \"channel\") return;\n\n\t\tconst injection_check = document.querySelectorAll(\"#wt-add\");\n\t\tconst channel_name = await this.getChannelNameFromChannelPage() ?? \"\";\n\n\t\tif (injection_check.length > 0) {\n\t\t\tif (injection_check.length >= 2) {\n\t\t\t\tconsole.warn(\"[channel] Too many Channel Injections, deleting all but one\");\n\t\t\t\tfor (let i = 1; i < injection_check.length; i++) {\n\t\t\t\t\tinjection_check[i].remove();\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (!injection_check[0]) return;\n\t\t\tawait this.refreshChannelInjection(injection_check[0] as HTMLChannelElement, channel_name ?? \"\");\n\t\t\treturn;\n\t\t}\n\n\t\tconst container = await PageHandler.WaitForElement(() => document.querySelector(`#` + YoutubeSettings.channel.inject.container.id));\n\t\tconst injection_spot = container.querySelector(\"#\" + YoutubeSettings.channel.inject.injection_spot.id);\n\n\t\tif (!injection_spot) {\n\t\t\tconsole.log(\"[channel] No injection spot\");\n\t\t\treturn;\n\t\t}\n\n\t\tif (!channel_name) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst div = await ChromeExtension.generateAddDiv(channel_name);\n\t\tinjection_spot.appendChild(div);\n\t}\n\n\tasync deleteShorts() {\n\t\tconsole.log(\"[inject] Deleting Shorts...\");\n\t\tconst _deleteShorts = () => {\n\t\t\tconst shorts = document.getElementsByTagName(YoutubeSettings.home.shorts.tag);\n\t\t\tfor (let i = 0; i < shorts.length; i++) {\n\t\t\t\tconst short = shorts[i] as HTMLElement;\n\t\t\t\tshort.style.display = \"none\";\n\t\t\t}\n\t\t}\n\t\tChromeExtension.page_instance.onVideoRefresh = _deleteShorts;\n\t}\n\n\n\t/**\n\t* @description Searches the current page for any video elements adds them into the array \n\t\t @returns Nothing(void)\n\t*/\n\tasync search() {\n\n\t\tconsole.log(\"[inject] Starting Search Routine...\");\n\t\tif (this.searching) return;\n\t\tthis.searching = true;\n\n\t\tconst _grabVideos = async () => {\n\t\t\tconst getContainers = () => {\n\t\t\t\tswitch (ChromeExtension.currentPage) {\n\t\t\t\t\tcase \"channel\":\n\t\t\t\t\tcase \"home\":\n\t\t\t\t\t\treturn document.getElementsByTagName(YoutubeSettings.home.container);\n\t\t\t\t\tcase \"video\":\n\t\t\t\t\t\treturn document.getElementsByTagName(YoutubeSettings.video.container);\n\t\t\t\t\tdefault:\n\t\t\t\t\t\treturn document.getElementsByTagName(YoutubeSettings.home.container);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tlet containers = getContainers();\n\t\t\tfor (let i = 0; i < containers.length; i++) {\n\t\t\t\tlet videos;\n\t\t\t\tswitch (ChromeExtension.currentPage) {\n\t\t\t\t\tcase \"channel\":\n\t\t\t\t\tcase \"home\":\n\t\t\t\t\t\tvideos = containers[i].getElementsByTagName(YoutubeSettings.home.yt_video);\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase \"video\":\n\t\t\t\t\t\tvideos = containers[i].getElementsByTagName(YoutubeSettings.video.yt_video);\n\t\t\t\t\t\tconst circles = containers[i].getElementsByTagName(YoutubeSettings.video.yt_circle);\n\t\t\t\t\t\tfor (let i = 0; i < circles.length; i++) {\n\t\t\t\t\t\t\tconst circle = circles[i] as HTMLElement;\n\t\t\t\t\t\t\tcircle.style.opacity = \"0\";\n\t\t\t\t\t\t}\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tdefault:\n\t\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tfor (let z = 0; z < videos.length; z++) {\n\t\t\t\t\tconst video_dom = videos[z] as HTMLElement;\n\t\t\t\t\tconst videof_obj = VideoFactory.createVideo(video_dom);\n\t\t\t\t\tconst _channel = this.channels.addChannel(new Channel(videof_obj.channelname.name, videof_obj.channelname.name));\n\t\t\t\t\tif (_channel)\n\t\t\t\t\t\t_channel.addVideo(videof_obj.video);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tChromeExtension.page_instance.onVideoRefresh = _grabVideos;\n\t}\n\n\tasync disableVideos() {\n\t\tlet banned_channels = this.channels.channels.filter(channel => !ChromeExtension.allowed_channels.includes(channel.name));\n\t\tbanned_channels.forEach(channel => channel.disable());\n\t}\n\n\tasync enableVideos() {\n\t\tlet allowed_channels = this.channels.channels.filter(channel => ChromeExtension.allowed_channels.includes(channel.name));\n\t\tallowed_channels.forEach(channel => channel.enable());\n\t}\n\n\tstartVideoDisableLoop() {\n\t\tconsole.log(\"[inject] Starting Video Disable Routine...\");\n\t\tChromeExtension.page_instance.onVideoRefresh = this.disableVideos.bind(this);\n\t}\n\n\tclearCache() {\n\t\tthis.channels.clearCache();\n\t}\n\n\trefreshCache() {\n\t}\n\n\n\tstatic addAllowedChannel(channel_name: string) {\n\t\tif (!ChromeExtension.allowed_channels.includes(channel_name)) {\n\t\t\tChromeExtension.allowed_channels.push(channel_name);\n\t\t\tMessageHandler.addChannel(channel_name);\n\t\t}\n\t}\n\n\tstatic removeAllowedChannel(channel_name: string) {\n\t\tif (ChromeExtension.allowed_channels.includes(channel_name)) {\n\t\t\tChromeExtension.allowed_channels.splice(ChromeExtension.allowed_channels.indexOf(channel_name), 1);\n\t\t\tMessageHandler.removeChannel(channel_name);\n\t\t}\n\t}\n\n}\n\n\n//used by the background script\nasync function inject(..._: any[]) {\n\tconst ce = new ChromeExtension([]);\n\n\tconsole.log(\"[injector] Injecting...\");\n\tChromeExtension.page_instance.onVideoRefresh = () => {\n\t\tce.injectHeader();\n\t\tce.injectChannel();\n\t\tce.channels.channels.forEach(channel => {\n\t\t\tchannel.refresh();\n\t\t});\n\t}\n\n\tce.search();\n\tce.startVideoDisableLoop();\n\tce.deleteShorts();\n\n\t//run chrome listener on update, and check the page\n\t//@ts-ignore\n\tBrowser.browser.runtime.onMessage.addListener((request, _sender, _sendResponse) => {\n\t\tif (request.type === \"update\") {\n\t\t\tChromeExtension.page_instance.refreshPage((page, updated) => {\n\t\t\t\tif (page === \"channel\" && updated) {\n\t\t\t\t\tChromeExtension.page_instance.WaitUntilHeaderLoaded(() => {\n\t\t\t\t\t\tce.injectChannel();\n\t\t\t\t\t\tce.injectHeader();\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t});\n\t\t\tce.clearCache();\n\t\t} else if (request.type === \"update-channels\") {\n\t\t\tconsole.log(\"[injector] Updating Channels\");\n\t\t\tce.refreshCache();\n\t\t}\n\t});\n\n\n\treturn true;\n}\n\ninject();\n\n", "import { ChromeExtension } from \"..\";\nimport { MessageHandler } from \"../handler/messagehandler\";\nimport { Identifiable } from \"./abstract/identifiable\";\nimport { Channel } from \"./channel\";\n\nexport class Video extends Identifiable {\n\tisShort = false;\n\tdom: HTMLElement | null = null;\n\tdisabled = false;\n\tinjected = false;\n\n\tconstructor(id: string, name: string, isShort: boolean, dom: HTMLElement) {\n\t\tsuper(id, name);\n\t\tthis.isShort = isShort;\n\t\tthis.dom = dom;\n\t}\n\n\tchangeInjectionState(plus: boolean) {\n\t\tif (!this.dom) return;\n\t\tconst element = this.dom.querySelector(\"#whitelist-spot\");\n\t\tif (!element) return;\n\t\tif (plus) {\n\t\t\telement.innerHTML = `<h2>+</h2>`;\n\t\t} else {\n\t\t\telement.innerHTML = `<h2>-</h2>`;\n\t\t}\n\t}\n\n\trefresh() {\n\t\tif (!this.dom) return;\n\t\tif (ChromeExtension.enabled) {\n\t\t\tif (this.disabled) {\n\t\t\t\tthis.dom.style.display = \"none\";\n\t\t\t} else {\n\t\t\t\tthis.dom.style.display = \"block\";\n\t\t\t}\n\t\t} else {\n\t\t\tthis.dom.style.display = \"block\";\n\t\t}\n\t\tthis.changeInjectionState(this.disabled);\n\t}\n\n\tdisable() {\n\t\tif (this.disabled) return;\n\t\tif (!this.dom) return;\n\t\tif (ChromeExtension.enabled) {\n\t\t\tthis.dom.style.display = \"none\";\n\t\t}\n\n\t\tthis.changeInjectionState(true);\n\t\tthis.disabled = true;\n\t}\n\n\tenable() {\n\t\tif (!this.dom) return;\n\t\tif (ChromeExtension.enabled) {\n\t\t\tthis.dom.style.display = \"block\";\n\t\t}\n\t\tthis.changeInjectionState(false);\n\t\tthis.disabled = false;\n\t}\n\n\t/**\n\t * @param {Channel} channel\n\t */\n\tinject(channel: Channel) {\n\t\tif (!this.dom) return;\n\t\tif (this.dom.dataset.whitelisted) {\n\t\t\tthis.injected = true;\n\t\t\treturn;\n\t\t}\n\n\t\tconst element = tdiv();\n\n\t\tif (!this.disabled)\n\t\t\telement.innerHTML = `<h2>-</h2>`;\n\t\telse\n\t\t\telement.innerHTML = `<h2>+</h2>`\n\n\t\telement.id = \"whitelist-spot\";\n\n\t\tconst onclick_function = () => {\n\t\t\tif (this.disabled) {\n\t\t\t\tMessageHandler.addChannel(channel.name);\n\t\t\t\tChromeExtension.addAllowedChannel(channel.name);\n\t\t\t\tthis.enable();\n\t\t\t\tchannel.enable();\n\t\t\t} else {\n\t\t\t\tMessageHandler.removeChannel(channel.name);\n\t\t\t\tChromeExtension.removeAllowedChannel(channel.name);\n\t\t\t\tthis.disable();\n\t\t\t\tchannel.disable();\n\t\t\t}\n\t\t};\n\n\t\telement.onclick = onclick_function.bind(this);\n\t\t//adjust for macbook trackpad\n\t\telement.onmousedown = (_) => {\n\t\t\tonclick_function();\n\t\t}\n\t\tthis.dom.appendChild(element);\n\t\tthis.dom.dataset.whitelisted = 'true';\n\t}\n\n}\n"],
  "mappings": "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",
  "names": ["i", "tag", "tdiv", "Browser", "Browser", "Browser", "tdiv", "i"]
}
